(cl:in-package #:ppm)

(5am:def-suite ppm :in testing::idyom-tests)
(5am:in-suite ppm)

;;; Test routines
;; ===========================================================================

(defun test-ppm (sequences &key (alphabet nil)
                             (exclusion t) (escape :c) (mixtures t) (update-exclusion nil) (order-bound nil)
                             ps write (detail 4))
  (let* ((alphabet (if alphabet alphabet (get-alphabet sequences)))
         (model (ppm:make-ppm alphabet :exclusion exclusion :escape escape :mixtures mixtures
                              :update-exclusion update-exclusion :order-bound order-bound))
         (result (ppm:model-dataset model sequences :construct? t :predict? t)))
    (prog1 (get-result result detail)
      (when write (write result :right-margin 110))
      (when ps (ppm:write-model-to-postscript model ps)))))

(defun get-alphabet (sequences)
  (flet ((sp (x y)
           (cond ((and (numberp x) (numberp y))
                  (<= x y))
                 ((and (symbolp x) (symbolp y))
                  (string<= x y))
                 ((and (stringp x) (stringp y))
                  (string<= x y))
                 ((and (characterp x) (characterp y))
                  (char<= x y)))))
    (sort (remove-duplicates
           (reduce #'append (mapcar #'(lambda (x) (remove-duplicates x :test #'equal)) sequences))
           :test #'equal)
          #'sp)))

(defun get-result (data detail)
  (if (= detail 4)
      data
      (let ((data-3
             (mapcar #'(lambda (x)
                         (mapcar #'(lambda (y)
                                     (codelength (get-probability (car y) (cadr y))))
                                 (cdr x)))
                     data)))
        (if (= detail 3)
            data-3
            (let ((data-2 (mapcar #'(lambda (x) (apply #'utils:average x)) data-3)))
              (if (= detail 2)
                  data-2
                  (apply #'utils:average data-2)))))))

;; Input tests
;; ===========================================================================

(5am:def-suite ppm*-input :in ppm)
(5am:in-suite ppm*-input)

(5am:test ppm*-input1
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a c))  :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 3)
                 (ppm::test-ppm '(("a" "b" "r" "a" "c" "a" "d" "a" "b" "r" "a" "c"))  :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 3))))


(5am:test ppm*-input2
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a c))  :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 3)
                 (ppm::test-ppm '((#\a #\b #\r #\a #\c #\a #\d #\a #\b #\r #\a #\c)) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 3))))

;; NB: ordering the alphabet differently will produce slightly
;; different probabilities due to different sums in normalisation
;; because floating point addition is not necessarily precisely
;; associative. Here the alphabe is specified in an order
;; corresponding to '(a b c d r).
(5am:test ppm*-input3
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 3)
                 (ppm::test-ppm '((1 2 3 1 4 1 5 1 2 3 1 4)) :alphabet '(1 2 4 5 3) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 3))))


;; dataset tests
;; ===========================================================================

(5am:def-suite ppm*-dataset :in ppm)
(5am:in-suite ppm*-dataset)

(5am:test ppm*-dataset1
  (5am:is (equal (test-ppm '((a b r a c a d a b r a)
                             (a b r a c a d a b r a)))
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.59999996) (B 0.09999999) (C 0.09999999) (D 0.09999999) (R 0.09999999)))
                    (R ((A 0.33333334) (B 0.33333334) (C 0.11111111) (D 0.11111111) (R 0.11111111)))
                    (A ((A 0.25) (B 0.25) (C 0.125) (D 0.125) (R 0.25)))
                    (C ((A 0.20000002) (B 0.53333336) (C 0.06666668) (D 0.06666668) (R 0.13333336)))
                    (A ((A 0.26666665) (B 0.19999997) (C 0.19999997) (D 0.13333331) (R 0.19999997)))
                    (D ((A 0.20833334) (B 0.2916667) (C 0.2916667) (D 0.083333336) (R 0.125)))
                    (A ((A 0.25) (B 0.1875) (C 0.1875) (D 0.1875) (R 0.1875)))
                    (B ((A 0.2093023) (B 0.21705426) (C 0.21705426) (D 0.21705426) (R 0.13953489)))
                    (R ((A 0.19148937) (B 0.14893615) (C 0.12765956) (D 0.12765956) (R 0.40425533)))
                    (A ((A 0.4347826) (B 0.1521739) (C 0.13043477) (D 0.13043477) (R 0.1521739))))
                   (1 (A ((A 0.2777778) (B 0.19444445) (C 0.16666667) (D 0.16666667) (R 0.19444445)))
                    (B ((A 0.20245397) (B 0.28834355) (C 0.19018403) (D 0.19018403) (R 0.12883434)))
                    (R ((A 0.15714285) (B 0.11428571) (C 0.08571428) (D 0.08571428) (R 0.55714285)))
                    (A ((A 0.5692308) (B 0.12307692) (C 0.09230768) (D 0.09230768) (R 0.12307692)))
                    (C ((A 0.11999999) (B 0.23) (C 0.46) (D 0.10999999) (R 0.07999999)))
                    (A ((A 0.47272727) (B 0.14545456) (C 0.12727273) (D 0.10909091) (R 0.14545456)))
                    (D ((A 0.111428574) (B 0.20571429) (C 0.15142857) (D 0.46285713) (R 0.068571426)))
                    (A ((A 0.48275864) (B 0.13793103) (C 0.12068966) (D 0.12068966) (R 0.13793103)))
                    (B ((A 0.11351351) (B 0.5243243) (C 0.14864865) (D 0.14864865) (R 0.06486486)))
                    (R ((A 0.12612611) (B 0.08108108) (C 0.06306306) (D 0.06306306) (R 0.6666666)))
                    (A ((A 0.6701031) (B 0.09278351) (C 0.072164945) (D 0.072164945) (R 0.09278351))))))))

(5am:test ppm*-dataset2
  (5am:is (equal (test-ppm '((a b r a c a d a b r a)
                             (a b r a c a d a b r a)
                             (a b r a c a d a b r a)))
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.59999996) (B 0.09999999) (C 0.09999999) (D 0.09999999) (R 0.09999999)))
                    (R ((A 0.33333334) (B 0.33333334) (C 0.11111111) (D 0.11111111) (R 0.11111111)))
                    (A ((A 0.25) (B 0.25) (C 0.125) (D 0.125) (R 0.25)))
                    (C ((A 0.20000002) (B 0.53333336) (C 0.06666668) (D 0.06666668) (R 0.13333336)))
                    (A ((A 0.26666665) (B 0.19999997) (C 0.19999997) (D 0.13333331) (R 0.19999997)))
                    (D ((A 0.20833334) (B 0.2916667) (C 0.2916667) (D 0.083333336) (R 0.125)))
                    (A ((A 0.25) (B 0.1875) (C 0.1875) (D 0.1875) (R 0.1875)))
                    (B ((A 0.2093023) (B 0.21705426) (C 0.21705426) (D 0.21705426) (R 0.13953489)))
                    (R ((A 0.19148937) (B 0.14893615) (C 0.12765956) (D 0.12765956) (R 0.40425533)))
                    (A ((A 0.4347826) (B 0.1521739) (C 0.13043477) (D 0.13043477) (R 0.1521739))))
                   (1 (A ((A 0.2777778) (B 0.19444445) (C 0.16666667) (D 0.16666667) (R 0.19444445)))
                    (B ((A 0.20245397) (B 0.28834355) (C 0.19018403) (D 0.19018403) (R 0.12883434)))
                    (R ((A 0.15714285) (B 0.11428571) (C 0.08571428) (D 0.08571428) (R 0.55714285)))
                    (A ((A 0.5692308) (B 0.12307692) (C 0.09230768) (D 0.09230768) (R 0.12307692)))
                    (C ((A 0.11999999) (B 0.23) (C 0.46) (D 0.10999999) (R 0.07999999)))
                    (A ((A 0.47272727) (B 0.14545456) (C 0.12727273) (D 0.10909091) (R 0.14545456)))
                    (D ((A 0.111428574) (B 0.20571429) (C 0.15142857) (D 0.46285713) (R 0.068571426)))
                    (A ((A 0.48275864) (B 0.13793103) (C 0.12068966) (D 0.12068966) (R 0.13793103)))
                    (B ((A 0.11351351) (B 0.5243243) (C 0.14864865) (D 0.14864865) (R 0.06486486)))
                    (R ((A 0.12612611) (B 0.08108108) (C 0.06306306) (D 0.06306306) (R 0.6666666)))
                    (A ((A 0.6701031) (B 0.09278351) (C 0.072164945) (D 0.072164945) (R 0.09278351))))
                   (2 (A ((A 0.31914893) (B 0.19148934) (C 0.14893617) (D 0.14893617) (R 0.19148934)))
                    (B ((A 0.15789472) (B 0.35197368) (C 0.20065789) (D 0.20065789) (R 0.088815786)))
                    (R ((A 0.107382536) (B 0.06711409) (C 0.04697986) (D 0.04697986) (R 0.7315436)))
                    (A ((A 0.73015875) (B 0.07936508) (C 0.055555556) (D 0.055555556) (R 0.07936508)))
                    (C ((A 0.06447536) (B 0.17699116) (C 0.6384324) (D 0.082174465) (R 0.037926678)))
                    (A ((A 0.61956525) (B 0.10869565) (C 0.08695652) (D 0.07608695) (R 0.10869565)))
                    (D ((A 0.06033518) (B 0.16201115) (C 0.103910595) (D 0.64022344) (R 0.033519547)))
                    (A ((A 0.625) (B 0.10416666) (C 0.08333333) (D 0.08333333) (R 0.10416666)))
                    (B ((A 0.06620208) (B 0.67595816) (C 0.11149825) (D 0.11149825) (R 0.034843203)))
                    (R ((A 0.090047404) (B 0.052132707) (C 0.037914697) (D 0.037914697) (R 0.78199047)))
                    (A ((A 0.7790698) (B 0.0639535) (C 0.046511635) (D 0.046511635) (R 0.0639535))))))))
          
(5am:test ppm*-dataset3
  (5am:is (equal (test-ppm '((a b r a c a d a b r a)
                             (l e t l e t t e r t e l e)
                             (a s s a n i s s i m a s s a)
                             (m i s s i s s i p p i)
                             (w o o l o o b o o l o o)))
                 '((0
                    (A
                     ((A 0.06666667) (B 0.06666667) (C 0.06666667) (D 0.06666667) (E 0.06666667) (I 0.06666667) (L 0.06666667)
                      (M 0.06666667) (N 0.06666667) (O 0.06666667) (P 0.06666667) (R 0.06666667) (S 0.06666667) (T 0.06666667)
                      (W 0.06666667)))
                    (B
                     ((A 0.5333332) (B 0.033333324) (C 0.033333324) (D 0.033333324) (E 0.033333324) (I 0.033333324)
                      (L 0.033333324) (M 0.033333324) (N 0.033333324) (O 0.033333324) (P 0.033333324) (R 0.033333324)
                      (S 0.033333324) (T 0.033333324) (W 0.033333324)))
                    (R
                     ((A 0.2758621) (B 0.2758621) (C 0.034482762) (D 0.034482762) (E 0.034482762) (I 0.034482762)
                      (L 0.034482762) (M 0.034482762) (N 0.034482762) (O 0.034482762) (P 0.034482762) (R 0.034482762)
                      (S 0.034482762) (T 0.034482762) (W 0.034482762)))
                    (A
                     ((A 0.19047616) (B 0.19047616) (C 0.03571428) (D 0.03571428) (E 0.03571428) (I 0.03571428) (L 0.03571428)
                      (M 0.03571428) (N 0.03571428) (O 0.03571428) (P 0.03571428) (R 0.19047616) (S 0.03571428) (T 0.03571428)
                      (W 0.03571428)))
                    (C
                     ((A 0.16571428) (B 0.5371428) (C 0.017142856) (D 0.017142856) (E 0.017142856) (I 0.017142856)
                      (L 0.017142856) (M 0.017142856) (N 0.017142856) (O 0.017142856) (P 0.017142856) (R 0.09142857)
                      (S 0.017142856) (T 0.017142856) (W 0.017142856)))
                    (A
                     ((A 0.2333334) (B 0.13333336) (C 0.13333336) (D 0.03333334) (E 0.03333334) (I 0.03333334) (L 0.03333334)
                      (M 0.03333334) (N 0.03333334) (O 0.03333334) (P 0.03333334) (R 0.13333336) (S 0.03333334) (T 0.03333334)
                      (W 0.03333334)))
                    (D
                     ((A 0.17543857) (B 0.28070173) (C 0.28070173) (D 0.017543858) (E 0.017543858) (I 0.017543858)
                      (L 0.017543858) (M 0.017543858) (N 0.017543858) (O 0.017543858) (P 0.017543858) (R 0.07017543)
                      (S 0.017543858) (T 0.017543858) (W 0.017543858)))
                    (A
                     ((A 0.24999997) (B 0.10526315) (C 0.10526315) (D 0.10526315) (E 0.032894734) (I 0.032894734)
                      (L 0.032894734) (M 0.032894734) (N 0.032894734) (O 0.032894734) (P 0.032894734) (R 0.10526315)
                      (S 0.032894734) (T 0.032894734) (W 0.032894734)))
                    (B
                     ((A 0.1794872) (B 0.19291821) (C 0.19291821) (D 0.19291821) (E 0.018315021) (I 0.018315021)
                      (L 0.018315021) (M 0.018315021) (N 0.018315021) (O 0.018315021) (P 0.018315021) (R 0.058608066)
                      (S 0.018315021) (T 0.018315021) (W 0.018315021)))
                    (R
                     ((A 0.15457413) (B 0.0851735) (C 0.050473183) (D 0.050473183) (E 0.01577287) (I 0.01577287) (L 0.01577287)
                      (M 0.01577287) (N 0.01577287) (O 0.01577287) (P 0.01577287) (R 0.50157726) (S 0.01577287) (T 0.01577287)
                      (W 0.01577287)))
                    (A
                     ((A 0.55555564) (B 0.08823531) (C 0.052287593) (D 0.052287593) (E 0.016339872) (I 0.016339872)
                      (L 0.016339872) (M 0.016339872) (N 0.016339872) (O 0.016339872) (P 0.016339872) (R 0.08823531)
                      (S 0.016339872) (T 0.016339872) (W 0.016339872))))
                   (1
                    (L
                     ((A 0.30612248) (B 0.13775513) (C 0.08163267) (D 0.08163267) (E 0.025510209) (I 0.025510209)
                      (L 0.025510209) (M 0.025510209) (N 0.025510209) (O 0.025510209) (P 0.025510209) (R 0.13775513)
                      (S 0.025510209) (T 0.025510209) (W 0.025510209)))
                    (E
                     ((A 0.26666674) (B 0.12380955) (C 0.076190494) (D 0.076190494) (E 0.028571432) (I 0.028571432)
                      (L 0.076190494) (M 0.028571432) (N 0.028571432) (O 0.028571432) (P 0.028571432) (R 0.12380955)
                      (S 0.028571432) (T 0.028571432) (W 0.028571432)))
                    (T
                     ((A 0.23423424) (B 0.11261262) (C 0.072072074) (D 0.072072074) (E 0.072072074) (I 0.03153153)
                      (L 0.072072074) (M 0.03153153) (N 0.03153153) (O 0.03153153) (P 0.03153153) (R 0.11261262) (S 0.03153153)
                      (T 0.03153153) (W 0.03153153)))
                    (L
                     ((A 0.20689656) (B 0.10344828) (C 0.06896552) (D 0.06896552) (E 0.06896552) (I 0.03448276) (L 0.06896552)
                      (M 0.03448276) (N 0.03448276) (O 0.03448276) (P 0.03448276) (R 0.10344828) (S 0.03448276) (T 0.06896552)
                      (W 0.03448276)))
                    (E
                     ((A 0.11538464) (B 0.05769232) (C 0.038461544) (D 0.038461544) (E 0.4615385) (I 0.019230772)
                      (L 0.05769232) (M 0.019230772) (N 0.019230772) (O 0.019230772) (P 0.019230772) (R 0.05769232)
                      (S 0.019230772) (T 0.038461544) (W 0.019230772)))
                    (T
                     ((A 0.11111112) (B 0.05555556) (C 0.03703704) (D 0.03703704) (E 0.05555556) (I 0.018518519) (L 0.05555556)
                      (M 0.018518519) (N 0.018518519) (O 0.018518519) (P 0.018518519) (R 0.05555556) (S 0.018518519)
                      (T 0.462963) (W 0.018518519)))
                    (T
                     ((A 0.10909091) (B 0.054545455) (C 0.03636364) (D 0.03636364) (E 0.054545455) (I 0.018181818)
                      (L 0.47272727) (M 0.018181818) (N 0.018181818) (O 0.018181818) (P 0.018181818) (R 0.054545455)
                      (S 0.018181818) (T 0.054545455) (W 0.018181818)))
                    (E
                     ((A 0.11111111) (B 0.055555556) (C 0.037037037) (D 0.037037037) (E 0.055555556) (I 0.018518517)
                      (L 0.24999999) (M 0.018518517) (N 0.018518517) (O 0.018518517) (P 0.018518517) (R 0.055555556)
                      (S 0.018518517) (T 0.2685185) (W 0.018518517)))
                    (R
                     ((A 0.07317073) (B 0.036585364) (C 0.024390245) (D 0.024390245) (E 0.04878049) (I 0.0121951215)
                      (L 0.036585364) (M 0.0121951215) (N 0.0121951215) (O 0.0121951215) (P 0.0121951215) (R 0.036585364)
                      (S 0.0121951215) (T 0.63414645) (W 0.0121951215)))
                    (T
                     ((A 0.64197534) (B 0.037037037) (C 0.024691358) (D 0.024691358) (E 0.04938272) (I 0.012345678)
                      (L 0.037037037) (M 0.012345678) (N 0.012345678) (O 0.012345678) (P 0.012345678) (R 0.04938272)
                      (S 0.012345678) (T 0.04938272) (W 0.012345678)))
                    (E
                     ((A 0.107142866) (B 0.053571433) (C 0.035714287) (D 0.035714287) (E 0.19047621) (I 0.017857142)
                      (L 0.17261906) (M 0.017857142) (N 0.017857142) (O 0.017857142) (P 0.017857142) (R 0.071428575)
                      (S 0.017857142) (T 0.20833336) (W 0.017857142)))
                    (L
                     ((A 0.051063832) (B 0.025531916) (C 0.017021278) (D 0.017021278) (E 0.042553194) (I 0.008510638)
                      (L 0.025531916) (M 0.008510638) (N 0.008510638) (O 0.008510638) (P 0.008510638) (R 0.5234043)
                      (S 0.008510638) (T 0.23829788) (W 0.008510638)))
                    (E
                     ((A 0.065217406) (B 0.0326087) (C 0.021739133) (D 0.021739133) (E 0.64130443) (I 0.010869566)
                      (L 0.043478265) (M 0.010869566) (N 0.010869566) (O 0.010869566) (P 0.010869566) (R 0.043478265)
                      (S 0.010869566) (T 0.05434783) (W 0.010869566))))
                   (2
                    (A
                     ((A 0.15384616) (B 0.07692308) (C 0.051282052) (D 0.051282052) (E 0.15384616) (I 0.025641026)
                      (L 0.102564104) (M 0.025641026) (N 0.025641026) (O 0.025641026) (P 0.025641026) (R 0.102564104)
                      (S 0.025641026) (T 0.12820514) (W 0.025641026)))
                    (S
                     ((A 0.08898303) (B 0.28389826) (C 0.14830507) (D 0.14830507) (E 0.07627117) (I 0.012711862) (L 0.05084745)
                      (M 0.012711862) (N 0.012711862) (O 0.012711862) (P 0.012711862) (R 0.05084745) (S 0.012711862)
                      (T 0.06355931) (W 0.012711862)))
                    (S
                     ((A 0.16088328) (B 0.07255521) (C 0.05047319) (D 0.05047319) (E 0.13880126) (I 0.028391166) (L 0.09463722)
                      (M 0.028391166) (N 0.028391166) (O 0.028391166) (P 0.028391166) (R 0.09463722) (S 0.05047319)
                      (T 0.11671924) (W 0.028391166)))
                    (A
                     ((A 0.09074731) (B 0.04092526) (C 0.028469749) (D 0.028469749) (E 0.07829181) (I 0.016014235)
                      (L 0.053380772) (M 0.016014235) (N 0.016014235) (O 0.016014235) (P 0.016014235) (R 0.053380772)
                      (S 0.46441275) (T 0.06583629) (W 0.016014235)))
                    (N
                     ((A 0.09630553) (B 0.2183479) (C 0.11664593) (D 0.11664593) (E 0.07305937) (I 0.014943962) (L 0.049813204)
                      (M 0.014943962) (N 0.014943962) (O 0.014943962) (P 0.014943962) (R 0.049813204) (S 0.12826902)
                      (T 0.061436288) (W 0.014943962)))
                    (I
                     ((A 0.16049382) (B 0.06790123) (C 0.049382713) (D 0.049382713) (E 0.12345679) (I 0.030864196)
                      (L 0.086419754) (M 0.030864196) (N 0.049382713) (O 0.030864196) (P 0.030864196) (R 0.086419754)
                      (S 0.06790123) (T 0.10493826) (W 0.030864196)))
                    (S
                     ((A 0.14603177) (B 0.06666668) (C 0.05079366) (D 0.05079366) (E 0.11428572) (I 0.05079366) (L 0.08253969)
                      (M 0.034920637) (N 0.05079366) (O 0.034920637) (P 0.034920637) (R 0.08253969) (S 0.06666668)
                      (T 0.098412715) (W 0.034920637)))
                    (S
                     ((A 0.26250002) (B 0.04375) (C 0.033333335) (D 0.033333335) (E 0.075) (I 0.033333335) (L 0.05416667)
                      (M 0.022916667) (N 0.033333335) (O 0.022916667) (P 0.022916667) (R 0.05416667) (S 0.22083335)
                      (T 0.06458333) (W 0.022916667)))
                    (I
                     ((A 0.5039549) (B 0.023728818) (C 0.0180791) (D 0.0180791) (E 0.040677976) (I 0.0180791) (L 0.02937854)
                      (M 0.012429382) (N 0.0180791) (O 0.012429382) (P 0.012429382) (R 0.02937854) (S 0.21581927)
                      (T 0.035028256) (W 0.012429382)))
                    (M
                     ((A 0.08679245) (B 0.039622642) (C 0.03018868) (D 0.03018868) (E 0.06792453) (I 0.039622642)
                      (L 0.049056605) (M 0.020754715) (N 0.03018868) (O 0.020754715) (P 0.020754715) (R 0.049056605)
                      (S 0.43584904) (T 0.058490567) (W 0.020754715)))
                    (A
                     ((A 0.1265823) (B 0.06329115) (C 0.05063292) (D 0.05063292) (E 0.10126584) (I 0.06329115) (L 0.07594938)
                      (M 0.05063292) (N 0.05063292) (O 0.03797469) (P 0.03797469) (R 0.07594938) (S 0.0886076) (T 0.0886076)
                      (W 0.03797469)))
                    (S
                     ((A 0.087579615) (B 0.16082802) (C 0.09235668) (D 0.09235668) (E 0.06369427) (I 0.039808914)
                      (L 0.047770698) (M 0.031847134) (N 0.09235668) (O 0.023885349) (P 0.023885349) (R 0.047770698)
                      (S 0.116242036) (T 0.055732477) (W 0.023885349)))
                    (S
                     ((A 0.12222222) (B 0.027777776) (C 0.02222222) (D 0.02222222) (E 0.04444444) (I 0.08888888) (L 0.03333333)
                      (M 0.02222222) (N 0.02222222) (O 0.016666666) (P 0.016666666) (R 0.03333333) (S 0.47222215)
                      (T 0.03888889) (W 0.016666666)))
                    (A
                     ((A 0.50993377) (B 0.01655629) (C 0.013245033) (D 0.013245033) (E 0.026490066) (I 0.16225165)
                      (L 0.019867549) (M 0.013245033) (N 0.013245033) (O 0.009933774) (P 0.009933774) (R 0.019867549)
                      (S 0.13907285) (T 0.023178808) (W 0.009933774))))
                   (3
                    (M
                     ((A 0.14457834) (B 0.060240973) (C 0.048192777) (D 0.048192777) (E 0.09638555) (I 0.060240973)
                      (L 0.07228917) (M 0.048192777) (N 0.048192777) (O 0.036144584) (P 0.036144584) (R 0.07228917)
                      (S 0.10843375) (T 0.08433736) (W 0.036144584)))
                    (I
                     ((A 0.42857146) (B 0.039682545) (C 0.031746034) (D 0.031746034) (E 0.063492075) (I 0.039682545)
                      (L 0.047619052) (M 0.039682545) (N 0.031746034) (O 0.023809526) (P 0.023809526) (R 0.047619052)
                      (S 0.07142858) (T 0.055555563) (W 0.023809526)))
                    (S
                     ((A 0.09302326) (B 0.03875969) (C 0.031007752) (D 0.031007752) (E 0.062015507) (I 0.046511628)
                      (L 0.046511628) (M 0.20930234) (N 0.031007752) (O 0.023255814) (P 0.023255814) (R 0.046511628)
                      (S 0.24031009) (T 0.054263566) (W 0.023255814)))
                    (S
                     ((A 0.15615615) (B 0.022522518) (C 0.018018015) (D 0.018018015) (E 0.036036033) (I 0.07807806)
                      (L 0.027027022) (M 0.022522518) (N 0.018018015) (O 0.013513511) (P 0.013513511) (R 0.027027022)
                      (S 0.50450444) (T 0.031531528) (W 0.013513511)))
                    (I
                     ((A 0.25675678) (B 0.011261261) (C 0.009009008) (D 0.009009008) (E 0.018018018) (I 0.48573574)
                      (L 0.013513514) (M 0.011261261) (N 0.009009008) (O 0.006756756) (P 0.006756756) (R 0.013513514)
                      (S 0.12687689) (T 0.015765766) (W 0.006756756)))
                    (S
                     ((A 0.048879836) (B 0.020366598) (C 0.016293278) (D 0.016293278) (E 0.03258656) (I 0.028513238)
                      (L 0.024439918) (M 0.47861508) (N 0.016293278) (O 0.012219959) (P 0.012219959) (R 0.024439918)
                      (S 0.2281059) (T 0.028513238) (W 0.012219959)))
                    (S
                     ((A 0.10246305) (B 0.0147783235) (C 0.011822659) (D 0.011822659) (E 0.023645317) (I 0.08768473)
                      (L 0.017733987) (M 0.0147783235) (N 0.011822659) (O 0.008866994) (P 0.008866994) (R 0.017733987)
                      (S 0.6384236) (T 0.020689653) (W 0.008866994)))
                    (I
                     ((A 0.17028984) (B 0.006793478) (C 0.005434782) (D 0.005434782) (E 0.0108695645) (I 0.65625006)
                      (L 0.008152174) (M 0.006793478) (N 0.005434782) (O 0.0040760865) (P 0.0040760865) (R 0.008152174)
                      (S 0.0946558) (T 0.009510869) (W 0.0040760865)))
                    (P
                     ((A 0.08759124) (B 0.03649635) (C 0.02919708) (D 0.02919708) (E 0.05839416) (I 0.05839416) (L 0.04379562)
                      (M 0.20437954) (N 0.02919708) (O 0.02189781) (P 0.02189781) (R 0.04379562) (S 0.2627737) (T 0.051094886)
                      (W 0.02189781)))
                    (P
                     ((A 0.11904763) (B 0.05654762) (C 0.04761905) (D 0.04761905) (E 0.083333336) (I 0.083333336)
                      (L 0.065476194) (M 0.05654762) (N 0.04761905) (O 0.038690478) (P 0.04761905) (R 0.065476194)
                      (S 0.1279762) (T 0.07440477) (W 0.038690478)))
                    (I
                     ((A 0.07751938) (B 0.036821708) (C 0.031007754) (D 0.031007754) (E 0.054263566) (I 0.054263566)
                      (L 0.042635657) (M 0.036821708) (N 0.031007754) (O 0.0251938) (P 0.37984493) (R 0.042635657)
                      (S 0.08333333) (T 0.048449613) (W 0.0251938))))
                   (4
                    (W
                     ((A 0.11695906) (B 0.055555545) (C 0.04678362) (D 0.04678362) (E 0.08187134) (I 0.090643264)
                      (L 0.06432748) (M 0.055555545) (N 0.04678362) (O 0.03801169) (P 0.055555545) (R 0.06432748)
                      (S 0.12573099) (T 0.073099405) (W 0.03801169)))
                    (O
                     ((A 0.103225805) (B 0.058064517) (C 0.051612902) (D 0.051612902) (E 0.077419356) (I 0.08387097)
                      (L 0.06451613) (M 0.058064517) (N 0.051612902) (O 0.04516129) (P 0.058064517) (R 0.06451613)
                      (S 0.10967742) (T 0.07096774) (W 0.051612902)))
                    (O
                     ((A 0.08695652) (B 0.061594207) (C 0.057971016) (D 0.057971016) (E 0.072463766) (I 0.07608696)
                      (L 0.06521739) (M 0.061594207) (N 0.057971016) (O 0.057971016) (P 0.061594207) (R 0.06521739)
                      (S 0.09057971) (T 0.06884058) (W 0.057971016)))
                    (L
                     ((A 0.070175424) (B 0.04970759) (C 0.04678362) (D 0.04678362) (E 0.05847952) (I 0.061403498)
                      (L 0.05263157) (M 0.04970759) (N 0.04678362) (O 0.23976606) (P 0.04970759) (R 0.05263157) (S 0.073099405)
                      (T 0.055555545) (W 0.04678362)))
                    (O
                     ((A 0.051391866) (B 0.036402572) (C 0.034261245) (D 0.034261245) (E 0.4475375) (I 0.044967882)
                      (L 0.040685225) (M 0.036402572) (N 0.034261245) (O 0.036402572) (P 0.036402572) (R 0.0385439)
                      (S 0.053533193) (T 0.040685225) (W 0.034261245)))
                    (O
                     ((A 0.070381224) (B 0.049853366) (C 0.046920814) (D 0.046920814) (E 0.058651015) (I 0.06158357)
                      (L 0.14662755) (M 0.049853366) (N 0.046920814) (O 0.143695) (P 0.049853366) (R 0.05278592) (S 0.07331377)
                      (T 0.05571847) (W 0.046920814)))
                    (B
                     ((A 0.04828973) (B 0.034205224) (C 0.03219315) (D 0.03219315) (E 0.04024144) (I 0.042253513)
                      (L 0.35010055) (M 0.034205224) (N 0.03219315) (O 0.16297783) (P 0.034205224) (R 0.0362173) (S 0.0503018)
                      (T 0.03822937) (W 0.03219315)))
                    (O
                     ((A 0.05755395) (B 0.04316546) (C 0.038369298) (D 0.038369298) (E 0.047961622) (I 0.050359704)
                      (L 0.04556354) (M 0.04076738) (N 0.038369298) (O 0.04556354) (P 0.04076738) (R 0.36930457) (S 0.05995203)
                      (T 0.04556354) (W 0.038369298)))
                    (O
                     ((A 0.066298336) (B 0.10497238) (C 0.044198893) (D 0.044198893) (E 0.055248614) (I 0.058011044)
                      (L 0.10773481) (M 0.046961322) (N 0.044198893) (O 0.16574587) (P 0.046961322) (R 0.04972375)
                      (S 0.069060765) (T 0.052486185) (W 0.044198893)))
                    (L
                     ((A 0.04771372) (B 0.19483101) (C 0.031809147) (D 0.031809147) (E 0.03976143) (I 0.041749507)
                      (L 0.1968191) (M 0.033797216) (N 0.031809147) (O 0.1610338) (P 0.033797216) (R 0.03578529) (S 0.04970179)
                      (T 0.03777336) (W 0.031809147)))
                    (O
                     ((A 0.042290747) (B 0.03171806) (C 0.02819383) (D 0.02819383) (E 0.20176212) (I 0.037004404)
                      (L 0.03524229) (M 0.029955944) (N 0.02819383) (O 0.37004408) (P 0.029955944) (R 0.03171806)
                      (S 0.04405286) (T 0.033480175) (W 0.02819383)))
                    (O
                     ((A 0.045714285) (B 0.07238095) (C 0.030476192) (D 0.030476192) (E 0.03809524) (I 0.040000003)
                      (L 0.114285715) (M 0.032380953) (N 0.030476192) (O 0.38476193) (P 0.032380953) (R 0.034285717)
                      (S 0.04761905) (T 0.036190476) (W 0.030476192))))))))
          
;; Dataset tests with Update exclusion
;; ===========================================================================

(5am:def-suite ppm*-dataset-ux :in ppm)
(5am:in-suite ppm*-dataset-ux)

(5am:test abracadabra-x2
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a)
                                  (a b r a c a d a b r a))
                                :mixtures t :update-exclusion t
                                :detail 2)
                 '(2.4509745 1.1457417))))

(5am:test abracadabra-x3
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a)
                                  (a b r a c a d a b r a)
                                  (a b r a c a d a b r a))
                                :mixtures t :update-exclusion t
                                :detail 2)
                 '(2.4509745 1.1457417 0.8534344))))

(5am:test abracadabra-bracadabra
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a)
                                  (b r a c a d a b r a))
                                :mixtures t :update-exclusion t
                                :detail 2)
                 '(2.4509745 1.1973304))))

(5am:test abracadabra-abrabrac
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a)
                                  (a b r a b r a c))
                                :mixtures t :update-exclusion t
                                :detail 2)
                 '(2.4509745 1.4018788))))

(5am:test abracadabra-abratbrac
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a)
                                  (a b r a t b r a c))
                                :mixtures t :update-exclusion t
                                :detail 2)
                 '(2.591134 1.8791169))))

(5am:test abracadabra-abrabtrac
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a)
                                  (a b r a b t r a c))
                                :mixtures t :update-exclusion t
                                :detail 2)
                 '(2.591134 2.0285676))))

(5am:test abracadabra-abrabrtac
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a)
                                  (a b r a b r t a c))
                                :mixtures t :update-exclusion t
                                :detail 2)
                 '(2.591134 1.8929263))))

(5am:test abracadabra-abrabratc
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a)
                                  (a b r a b r a t c))
                                :mixtures t :update-exclusion t
                                :detail 2)
                 '(2.591134 1.7575804))))

(5am:test abracadabra-abrabract
  (5am:is (equal (ppm::test-ppm '((a b r a c a d a b r a)
                                  (a b r a b r a c t))
                                :mixtures t :update-exclusion t
                                :detail 2)
                 '(2.591134 1.5876032))))


;; Simple Tests
;; ===========================================================================

(5am:def-suite ppm*-simple :in ppm)
(5am:in-suite ppm*-simple)

(5am:test kkkkkkkkk-ppmc*
  (5am:is (equal (test-ppm '((k k k k k k k k k)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (K ((K 1.0)))
                    (K ((K 1.0)))
                    (K ((K 1.0)))
                    (K ((K 1.0)))
                    (K ((K 1.0)))
                    (K ((K 1.0)))
                    (K ((K 1.0)))
                    (K ((K 1.0)))
                    (K ((K 1.0))))))))

(5am:test ababc-ppmc*
  (5am:is (equal (test-ppm '((a b a b c)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (A ((A 0.33333334) (B 0.33333334) (C 0.33333334)))
                    (B ((A 0.59999996) (B 0.19999999) (C 0.19999999)))
                    (A ((A 0.33333334) (B 0.33333334) (C 0.33333334)))
                    (B ((A 0.2857143) (B 0.5714286) (C 0.14285715)))
                    (C ((A 0.5714286) (B 0.2857143) (C 0.14285715))))))))

(5am:test aaaaaaaabb-ppmc*
  (5am:is (equal (test-ppm '((a a a a a a a a b b)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0
                    (A ((A 0.5) (B 0.5)))
                    (A ((A 0.6666667) (B 0.33333334)))
                    (A ((A 0.6666667) (B 0.33333334)))
                    (A ((A 0.79999995) (B 0.19999997)))
                    (A ((A 0.8571429) (B 0.14285715)))
                    (A ((A 0.88888896) (B 0.11111111)))
                    (A ((A 0.90909094) (B 0.0909091)))
                    (A ((A 0.92307687) (B 0.076923065)))
                    (B ((A 0.9333334) (B 0.06666667)))
                    (B ((A 0.88888884) (B 0.111111104))))))))
                 
(5am:test abrabrab-ppmc*
  (5am:is (equal (ppm::test-ppm '((a b r a b r a b)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0
                    (A ((A 0.33333334) (B 0.33333334) (R 0.33333334)))
                    (B ((A 0.59999996) (B 0.19999999) (R 0.19999999)))
                    (R ((A 0.33333334) (B 0.33333334) (R 0.33333334)))
                    (A ((A 0.33333334) (B 0.33333334) (R 0.33333334)))
                    (B ((A 0.22222224) (B 0.6666667) (R 0.11111112)))
                    (R ((A 0.18181819) (B 0.18181819) (R 0.6363636)))
                    (A ((A 0.6363636) (B 0.18181819) (R 0.18181819)))
                    (B ((A 0.14285713) (B 0.76190484) (R 0.0952381))))))))


;; PPM* without exclusion
;; ===========================================================================

(5am:def-suite ppm*-exclusion :in ppm)
(5am:in-suite ppm*-exclusion)

(5am:test abracadabra-ppmc*-without-exclusion
  (5am:is (equal (test-ppm '((a b r a c a d a b r a)) :exclusion nil :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (A ((A 0.2) (B 0.2) (C 0.2) (D 0.2) (R 0.2)))
                    (B ((A 0.5555555) (B 0.111111104) (C 0.111111104) (D 0.111111104) (R 0.111111104)))
                    (R ((A 0.31249997) (B 0.31249997) (C 0.12499999) (D 0.12499999) (R 0.12499999)))
                    (A ((A 0.23809522) (B 0.23809522) (C 0.14285713) (D 0.14285713) (R 0.23809522)))
                    (C ((A 0.17857143) (B 0.625) (C 0.053571425) (D 0.053571425) (R 0.08928572)))
                    (A ((A 0.3448276) (B 0.1724138) (C 0.1724138) (D 0.13793102) (R 0.1724138)))
                    (D ((A 0.20270272) (B 0.33783785) (C 0.33783785) (D 0.054054055) (R 0.06756757)))
                    (A ((A 0.42857143) (B 0.14285715) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (B ((A 0.22222221) (B 0.24074072) (C 0.24074072) (D 0.24074072) (R 0.055555552)))
                    (R ((A 0.18181819) (B 0.09090909) (C 0.045454547) (D 0.045454547) (R 0.6363636)))
                    (A ((A 0.7142857) (B 0.0952381) (C 0.04761905) (D 0.04761905) (R 0.0952381))))))))


;; PPM* with Blending
;; ===========================================================================

(5am:def-suite ppm*-blending :in ppm)
(5am:in-suite ppm*-blending)

;; abracadabra (Cleary & Teahan, 1997; Bunton, 1996)
(5am:test abracadabra-ppmc*
  (5am:is (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.5555555) (B 0.111111104) (C 0.111111104) (D 0.111111104) (R 0.111111104)))
                    (R ((A 0.2857143) (B 0.2857143) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (C ((A 0.18181819) (B 0.54545456) (C 0.09090909) (D 0.09090909) (R 0.09090909)))
                    (A ((A 0.2857143) (B 0.14285715) (C 0.14285715) (D 0.28571427) (R 0.14285715)))
                    (D ((A 0.21428573) (B 0.2857143) (C 0.2857143) (D 0.14285715) (R 0.071428575)))
                    (A ((A 0.42857143) (B 0.14285715) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (B ((A 0.26666665) (B 0.22222221) (C 0.22222221) (D 0.22222221) (R 0.06666666)))
                    (R ((A 0.19047621) (B 0.095238104) (C 0.047619052) (D 0.047619052) (R 0.61904764)))
                    (A ((A 0.6470587) (B 0.117647044) (C 0.058823522) (D 0.058823522) (R 0.117647044)))
                    (C ((A 0.11627906) (B 0.18604651) (C 0.5581395) (D 0.093023255) (R 0.046511628))))))))

;; letlettertele (Larsson, 1999)
(5am:test letlettertele-ppmc*
  (5am:is (equal (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (L ((E 0.25) (L 0.25) (R 0.25) (T 0.25)))
                    (E ((E 0.14285715) (L 0.5714286) (R 0.14285715) (T 0.14285715)))
                    (T ((E 0.29999998) (L 0.29999998) (R 0.19999999) (T 0.19999999)))
                    (L ((E 0.22222221) (L 0.22222221) (R 0.3333333) (T 0.22222221)))
                    (E ((E 0.5714286) (L 0.19047621) (R 0.14285715) (T 0.095238104)))
                    (T ((E 0.16000001) (L 0.16000001) (R 0.11999999) (T 0.56)))
                    (T ((E 0.16000001) (L 0.56) (R 0.11999999) (T 0.16000001)))
                    (E ((E 0.2352941) (L 0.29411763) (R 0.17647058) (T 0.29411763)))
                    (R ((E 0.13333333) (L 0.08888889) (R 0.06666666) (T 0.7111112)))
                    (T ((E 0.33333334) (L 0.22222222) (R 0.11111111) (T 0.33333334)))
                    (E ((E 0.2777778) (L 0.2777778) (R 0.16666667) (T 0.2777778)))
                    (L ((E 0.11111113) (L 0.055555563) (R 0.5555556) (T 0.2777778)))
                    (E ((E 0.75) (L 0.09374999) (R 0.031249998) (T 0.12499999))))))))
                 
;; assanissimassa (Blelloch, 2001)
(5am:test assanissimassa-ppmc*
  (5am:is (equal (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (A ((A 0.19999999) (I 0.19999999) (M 0.19999999) (N 0.19999999) (S 0.19999999)))
                    (S ((A 0.5555555) (I 0.111111104) (M 0.111111104) (N 0.111111104) (S 0.111111104)))
                    (S ((A 0.2857143) (I 0.14285715) (M 0.14285715) (N 0.14285715) (S 0.2857143)))
                    (A ((A 0.18181819) (I 0.090909086) (M 0.090909086) (N 0.090909086) (S 0.54545456)))
                    (N ((A 0.26666668) (I 0.06666667) (M 0.06666667) (N 0.06666667) (S 0.53333336)))
                    (I ((A 0.2857143) (I 0.14285715) (M 0.14285715) (N 0.14285715) (S 0.2857143)))
                    (S ((A 0.25) (I 0.125) (M 0.24999996) (N 0.125) (S 0.25)))
                    (S ((A 0.3) (I 0.10000001) (M 0.2) (N 0.10000001) (S 0.3)))
                    (I ((A 0.54545456) (I 0.045454547) (M 0.090909086) (N 0.045454547) (S 0.27272728)))
                    (M ((A 0.12500001) (I 0.12500001) (M 0.12499999) (N 0.06250001) (S 0.5625)))
                    (A ((A 0.20000002) (I 0.20000002) (M 0.10000001) (N 0.10000001) (S 0.40000004)))
                    (S ((A 0.1764706) (I 0.11764707) (M 0.058823533) (N 0.32352942) (S 0.32352942)))
                    (S ((A 0.12727273) (I 0.12727273) (M 0.05454546) (N 0.05454546) (S 0.6363636)))
                    (A ((A 0.5675675) (I 0.18918918) (M 0.027027026) (N 0.027027026) (S 0.18918917))))))))

;; mississippi (Witten et al., 1999)
(5am:test mississippi-ppmc*
  (5am:is (equal (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (M ((I 0.25) (M 0.25) (P 0.25) (S 0.25)))
                    (I ((I 0.14285715) (M 0.5714286) (P 0.14285715) (S 0.14285715)))
                    (S ((I 0.29999998) (M 0.29999998) (P 0.19999999) (S 0.19999999)))
                    (S ((I 0.22222221) (M 0.22222221) (P 0.3333333) (S 0.22222221)))
                    (I ((I 0.11764705) (M 0.11764705) (P 0.17647058) (S 0.58823526)))
                    (S ((I 0.19047621) (M 0.095238104) (P 0.14285715) (S 0.5714286)))
                    (S ((I 0.19047621) (M 0.0952381) (P 0.14285713) (S 0.5714286)))
                    (I ((I 0.55172414) (M 0.06896552) (P 0.10344827) (S 0.27586207)))
                    (P ((I 0.15384614) (M 0.05128205) (P 0.07692306) (S 0.7179487)))
                    (P ((I 0.33333334) (M 0.11111111) (P 0.11111111) (S 0.44444445)))
                    (I ((I 0.14999999) (M 0.049999997) (P 0.59999996) (S 0.19999999))))))))
                 
;; woolloomooloo (Williams, 1991)
(5am:test woolloomooloo-ppmc*
  (5am:is (equal (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (W ((L 0.25) (M 0.25) (O 0.25) (W 0.25)))
                    (O ((L 0.14285715) (M 0.14285715) (O 0.14285715) (W 0.5714286)))
                    (O ((L 0.19999999) (M 0.19999999) (O 0.29999998) (W 0.29999998)))
                    (L ((L 0.12499999) (M 0.12499999) (O 0.5625) (W 0.1875)))
                    (L ((L 0.18181819) (M 0.27272725) (O 0.36363637) (W 0.18181819)))
                    (O ((L 0.5714286) (M 0.14285715) (O 0.19047621) (W 0.095238104)))
                    (O ((L 0.30769232) (M 0.23076925) (O 0.30769232) (W 0.15384616)))
                    (M ((L 0.55172414) (M 0.10344827) (O 0.27586207) (W 0.06896552)))
                    (O ((L 0.25) (M 0.125) (O 0.5) (W 0.125)))
                    (O ((L 0.21739131) (M 0.21739131) (O 0.43478262) (W 0.13043478)))
                    (L ((L 0.3125) (M 0.3125) (O 0.3125) (W 0.0625)))
                    (O ((L 0.64285713) (M 0.07142857) (O 0.21428572) (W 0.07142857)))
                    (O ((L 0.20833334) (M 0.10416667) (O 0.625) (W 0.0625))))))))
                 
;; agcgacgag (Giegerich & Kurtz, 1994, 1995)
(5am:test agcgacgag-ppmc*
  (5am:is (equal (test-ppm '((a g c g a c g a g)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (A ((A 0.33333334) (C 0.33333334) (G 0.33333334)))
                    (G ((A 0.59999996) (C 0.19999999) (G 0.19999999)))
                    (C ((A 0.33333334) (C 0.33333334) (G 0.33333334)))
                    (G ((A 0.33333334) (C 0.33333334) (G 0.33333334)))
                    (A ((A 0.11111112) (C 0.6666667) (G 0.22222224)))
                    (C ((A 0.22222224) (C 0.11111112) (G 0.6666667)))
                    (G ((A 0.18181819) (C 0.18181819) (G 0.6363636)))
                    (A ((A 0.59999996) (C 0.19999999) (G 0.19999997)))
                    (G ((A 0.2) (C 0.6) (G 0.20000002))))))))


;; PPM* with Blending and Update Exclusion
;; ===========================================================================

(5am:def-suite ppm-blending-update-exclusion :in ppm)
(5am:in-suite ppm-blending-update-exclusion)

;; abracadabra (Cleary & Teahan, 1997; Bunton, 1996)
(5am:test abracadabra-ppmc*u
  (5am:is (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures nil :update-exclusion t :order-bound nil)
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.5555555) (B 0.111111104) (C 0.111111104) (D 0.111111104) (R 0.111111104)))
                    (R ((A 0.2857143) (B 0.2857143) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (C ((A 0.18181819) (B 0.54545456) (C 0.09090909) (D 0.09090909) (R 0.09090909)))
                    (A ((A 0.2857143) (B 0.14285715) (C 0.14285715) (D 0.28571427) (R 0.14285715)))
                    (D ((A 0.21428573) (B 0.2857143) (C 0.2857143) (D 0.14285715) (R 0.071428575)))
                    (A ((A 0.42857143) (B 0.14285715) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (B ((A 0.26666665) (B 0.22222221) (C 0.22222221) (D 0.22222221) (R 0.06666666)))
                    (R ((A 0.21052633) (B 0.052631583) (C 0.052631583) (D 0.052631583) (R 0.631579)))
                    (A ((A 0.6923076) (B 0.076923065) (C 0.076923065) (D 0.076923065) (R 0.076923065)))
                    (C ((A 0.11428572) (B 0.19047621) (C 0.5714286) (D 0.095238104) (R 0.02857143))))))))


;; PPM with Blending and fixed order bound
;; ===========================================================================

(5am:def-suite ppm-blending-order-bound :in ppm)
(5am:in-suite ppm-blending-order-bound)

;; Abracadabra
(5am:test abracadabra-ppmc2
  (5am:is (and (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures nil :update-exclusion nil :order-bound 2)
                      (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil))
               (not (equal
                     (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures nil :update-exclusion nil :order-bound 1)
                     (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil))))))
          

(5am:test abracadabra-ppmc1
  (5am:is (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures nil :update-exclusion nil :order-bound 1)
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.5555555) (B 0.111111104) (C 0.111111104) (D 0.111111104) (R 0.111111104)))
                    (R ((A 0.2857143) (B 0.2857143) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (C ((A 0.18181819) (B 0.54545456) (C 0.09090909) (D 0.09090909) (R 0.09090909)))
                    (A ((A 0.2857143) (B 0.14285715) (C 0.14285715) (D 0.28571427) (R 0.14285715)))
                    (D ((A 0.21428573) (B 0.2857143) (C 0.2857143) (D 0.14285715) (R 0.071428575)))
                    (A ((A 0.42857143) (B 0.14285715) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (B ((A 0.26666665) (B 0.22222221) (C 0.22222221) (D 0.22222221) (R 0.06666666)))
                    (R ((A 0.19047621) (B 0.095238104) (C 0.047619052) (D 0.047619052) (R 0.61904764)))
                    (A ((A 0.6470587) (B 0.117647044) (C 0.058823522) (D 0.058823522) (R 0.117647044)))
                    (C ((A 0.2173913) (B 0.34782612) (C 0.17391306) (D 0.17391306) (R 0.08695652))))))))

(5am:test abracadabra-ppmc0
  (5am:is (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures nil :update-exclusion nil :order-bound 0)
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.5555555) (B 0.111111104) (C 0.111111104) (D 0.111111104) (R 0.111111104)))
                    (R ((A 0.2857143) (B 0.2857143) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (C ((A 0.33333334) (B 0.16666667) (C 0.16666666) (D 0.16666666) (R 0.16666667)))
                    (A ((A 0.2857143) (B 0.14285715) (C 0.14285715) (D 0.28571427) (R 0.14285715)))
                    (D ((A 0.37499997) (B 0.125) (C 0.125) (D 0.24999996) (R 0.125)))
                    (A ((A 0.42857143) (B 0.14285715) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (B ((A 0.49999997) (B 0.12499999) (C 0.12499999) (D 0.12499999) (R 0.12499999)))
                    (R ((A 0.44444442) (B 0.22222221) (C 0.111111104) (D 0.111111104) (R 0.111111104)))
                    (A ((A 0.40000004) (B 0.20000002) (C 0.10000001) (D 0.10000001) (R 0.20000002)))
                    (C ((A 0.45454547) (B 0.18181819) (C 0.09090909) (D 0.09090909) (R 0.18181819))))))))

;; letlettertele
(5am:test letlettertele-ppmc2
  (5am:is (equal (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures nil :update-exclusion nil :order-bound 2))))

(5am:test letlettertele-ppmc1
  (5am:is (not (equal
                (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures nil :update-exclusion nil :order-bound 1)))))

;; assanissimassa
(5am:test assanissimassa-ppmc3
  (5am:is (equal (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures nil :update-exclusion nil :order-bound 3))))

(5am:test assanissimassa-ppmc2
  (5am:is (not (equal
                (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures nil :update-exclusion nil :order-bound 2)))))

;; missisippi
;; 
;; PPM* predicts the first p at order 1 (the lowest-order deterministic state) while all other predictions are order 2

(5am:test mississippi-ppmc2
  (5am:is (not (equal (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                      (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures nil :update-exclusion nil :order-bound 2)))))

(5am:test mississippi-ppmc1
  (5am:is (not (equal
                (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures nil :update-exclusion nil :order-bound 1)))))

;; woolloomooloo
(5am:test woolloomooloo-ppmc2
  (5am:is (equal (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil) 
                 (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures nil :update-exclusion nil :order-bound 2))))

(5am:test woolloomooloo-ppmc1
  (5am:is (not (equal (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil) 
                      (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures nil :update-exclusion nil :order-bound 1)))))

;; agcgacgag
(5am:test agcgacgag-ppmc2
  (5am:is (equal (test-ppm '((a g c g a c g a g)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 (test-ppm '((a g c g a c g a g)) :escape :c :mixtures nil :update-exclusion nil :order-bound 2))))

(5am:test agcgacgag-ppmc1
  (5am:is (not (equal (test-ppm '((a g c g a c g a g)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                      (test-ppm '((a g c g a c g a g)) :escape :c :mixtures nil :update-exclusion nil :order-bound 1)))))
          
                 
;; PPM* with Mixtures
;; ===========================================================================

(5am:def-suite ppm*-mixtures :in ppm)
(5am:in-suite ppm*-mixtures)

;; abracadabrac (Cleary & Teahan, 1997; Bunton, 1996)
(5am:test abracadabra-ppmc*i
  (5am:is (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.59999996) (B 0.09999999) (C 0.09999999) (D 0.09999999) (R 0.09999999)))
                    (R ((A 0.33333334) (B 0.33333334) (C 0.11111111) (D 0.11111111) (R 0.11111111)))
                    (A ((A 0.25) (B 0.25) (C 0.125) (D 0.125) (R 0.25)))
                    (C ((A 0.20000002) (B 0.53333336) (C 0.06666668) (D 0.06666668) (R 0.13333336)))
                    (A ((A 0.26666665) (B 0.19999997) (C 0.19999997) (D 0.13333331) (R 0.19999997)))
                    (D ((A 0.20833334) (B 0.2916667) (C 0.2916667) (D 0.083333336) (R 0.125)))
                    (A ((A 0.25) (B 0.1875) (C 0.1875) (D 0.1875) (R 0.1875)))
                    (B ((A 0.2093023) (B 0.21705426) (C 0.21705426) (D 0.21705426) (R 0.13953489)))
                    (R ((A 0.19148937) (B 0.14893615) (C 0.12765956) (D 0.12765956) (R 0.40425533)))
                    (A ((A 0.4347826) (B 0.1521739) (C 0.13043477) (D 0.13043477) (R 0.1521739)))
                    (C ((A 0.13157894) (B 0.1973684) (C 0.44736835) (D 0.13157894) (R 0.092105255))))))))

;; letlettertele (Larsson, 1999)
(5am:test letlettertele-ppmc*i
  (5am:is (equal (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                 '((0 (L ((E 0.25) (L 0.25) (R 0.25) (T 0.25)))
                    (E ((E 0.125) (L 0.625) (R 0.125) (T 0.125)))
                    (T ((E 0.35714287) (L 0.35714287) (R 0.14285715) (T 0.14285715)))
                    (L ((E 0.2777778) (L 0.2777778) (R 0.16666667) (T 0.2777778)))
                    (E ((E 0.53125) (L 0.21875001) (R 0.09375) (T 0.15625)))
                    (T ((E 0.19444443) (L 0.19444443) (R 0.08333332) (T 0.5277778)))
                    (T ((E 0.18421054) (L 0.5526316) (R 0.07894737) (T 0.18421054)))
                    (E ((E 0.19444445) (L 0.3333333) (R 0.08333333) (T 0.3888889)))
                    (R ((E 0.14999999) (L 0.11666667) (R 0.049999997) (T 0.68333334)))
                    (T ((E 0.28) (L 0.23999998) (R 0.19999999) (T 0.28)))
                    (E ((E 0.27956992) (L 0.24731185) (R 0.16129033) (T 0.311828)))
                    (L ((E 0.12903225) (L 0.0967742) (R 0.48387095) (T 0.29032257)))
                    (E ((E 0.6153847) (L 0.13461538) (R 0.09615384) (T 0.15384616))))))))
                 
;; assanissimassa (Blelloch, 2001)
(5am:test assanissimassa-ppmc*i
  (5am:is (equal (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                 '((0 (A ((A 0.19999999) (I 0.19999999) (M 0.19999999) (N 0.19999999) (S 0.19999999)))
                    (S ((A 0.59999996) (I 0.09999999) (M 0.09999999) (N 0.09999999) (S 0.09999999)))
                    (S ((A 0.33333334) (I 0.11111111) (M 0.11111111) (N 0.11111111) (S 0.33333334)))
                    (A ((A 0.1764706) (I 0.058823526) (M 0.058823526) (N 0.058823526) (S 0.64705884)))
                    (N ((A 0.23809524) (I 0.04761905) (M 0.04761905) (N 0.04761905) (S 0.61904764)))
                    (I ((A 0.3) (I 0.1) (M 0.1) (N 0.2) (S 0.3)))
                    (S ((A 0.25) (I 0.1875) (M 0.12499999) (N 0.1875) (S 0.25)))
                    (S ((A 0.30434784) (I 0.13043478) (M 0.086956516) (N 0.13043478) (S 0.34782606)))
                    (I ((A 0.4871795) (I 0.07692308) (M 0.051282052) (N 0.07692308) (S 0.30769232)))
                    (M ((A 0.14285715) (I 0.14285715) (M 0.07142857) (N 0.10714285) (S 0.53571427)))
                    (A ((A 0.19999999) (I 0.19999999) (M 0.17142856) (N 0.17142856) (S 0.25714287)))
                    (S ((A 0.17021279) (I 0.14893618) (M 0.12765957) (N 0.24468085) (S 0.30851063)))
                    (S ((A 0.17816092) (I 0.16091955) (M 0.10344828) (N 0.10344828) (S 0.454023)))
                    (A ((A 0.4527559) (I 0.19291338) (M 0.07086614) (N 0.07086614) (S 0.21259843))))))))

;; mississippi (Witten et al., 1999)
(5am:test mississippi-ppmc*i
  (5am:is (equal (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                 '((0
                    (M ((I 0.25) (M 0.25) (P 0.25) (S 0.25)))
                    (I ((I 0.125) (M 0.625) (P 0.125) (S 0.125)))
                    (S ((I 0.35714287) (M 0.35714287) (P 0.14285715) (S 0.14285715)))
                    (S ((I 0.2777778) (M 0.2777778) (P 0.16666667) (S 0.2777778)))
                    (I ((I 0.16666667) (M 0.16666667) (P 0.10000001) (S 0.5666667)))
                    (S ((I 0.20588236) (M 0.14705881) (P 0.08823529) (S 0.5588235)))
                    (S ((I 0.25) (M 0.11363636) (P 0.06818181) (S 0.5681818)))
                    (I ((I 0.5) (M 0.0925926) (P 0.055555556) (S 0.35185185)))
                    (P ((I 0.16071428) (M 0.08928572) (P 0.053571425) (S 0.6964286)))
                    (P ((I 0.28000003) (M 0.2) (P 0.2) (S 0.32)))
                    (I ((I 0.18421052) (M 0.13157895) (P 0.47368425) (S 0.21052632))))))))
                 
;; woolloomooloo (Williams, 1991)
(5am:test woolloomooloo-ppmc*i
  (5am:is (equal (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (W ((L 0.25) (M 0.25) (O 0.25) (W 0.25)))
                    (O ((L 0.14285715) (M 0.14285715) (O 0.14285715) (W 0.5714286)))
                    (O ((L 0.19999999) (M 0.19999999) (O 0.29999998) (W 0.29999998)))
                    (L ((L 0.12499999) (M 0.12499999) (O 0.5625) (W 0.1875)))
                    (L ((L 0.18181819) (M 0.27272725) (O 0.36363637) (W 0.18181819)))
                    (O ((L 0.5714286) (M 0.14285715) (O 0.19047621) (W 0.095238104)))
                    (O ((L 0.30769232) (M 0.23076925) (O 0.30769232) (W 0.15384616)))
                    (M ((L 0.55172414) (M 0.10344827) (O 0.27586207) (W 0.06896552)))
                    (O ((L 0.25) (M 0.125) (O 0.5) (W 0.125)))
                    (O ((L 0.21739131) (M 0.21739131) (O 0.43478262) (W 0.13043478)))
                    (L ((L 0.3125) (M 0.3125) (O 0.3125) (W 0.0625)))
                    (O ((L 0.64285713) (M 0.07142857) (O 0.21428572) (W 0.07142857)))
                    (O ((L 0.20833334) (M 0.10416667) (O 0.625) (W 0.0625))))))))
                 
;; agcgacgag (Giegerich & Kurtz, 1994, 1995)
(5am:test agcgacgag-ppmc*i
  (5am:is (equal (test-ppm '((a g c g a c g a g)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                 '((0 (A ((A 0.33333334) (C 0.33333334) (G 0.33333334)))
                    (G ((A 0.6666667) (C 0.16666667) (G 0.16666667)))
                    (C ((A 0.4) (C 0.2) (G 0.4)))
                    (G ((A 0.33333334) (C 0.33333334) (G 0.33333334)))
                    (A ((A 0.21052633) (C 0.5263158) (G 0.26315793)))
                    (C ((A 0.25) (C 0.19999999) (G 0.54999995)))
                    (G ((A 0.22727273) (C 0.22727273) (G 0.5454545)))
                    (A ((A 0.5483871) (C 0.25806454) (G 0.1935484)))
                    (G ((A 0.18750001) (C 0.53125006) (G 0.28125))))))))


;; PPM* with Mixtures and Update Exclusion
;; ===========================================================================

(5am:def-suite ppm-mixtures-update-exclusion :in ppm)
(5am:in-suite ppm-mixtures-update-exclusion)

;; abracadabra (Cleary & Teahan, 1997; Bunton, 1996)
(5am:test abracadabra-ppmc*ui
  (5am:is (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures t :update-exclusion t :order-bound nil)
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.59999996) (B 0.09999999) (C 0.09999999) (D 0.09999999) (R 0.09999999)))
                    (R ((A 0.33333334) (B 0.33333334) (C 0.11111111) (D 0.11111111) (R 0.11111111)))
                    (A ((A 0.25) (B 0.25) (C 0.125) (D 0.125) (R 0.25)))
                    (C ((A 0.20000002) (B 0.53333336) (C 0.06666668) (D 0.06666668) (R 0.13333336)))
                    (A ((A 0.26666665) (B 0.19999997) (C 0.19999997) (D 0.13333331) (R 0.19999997)))
                    (D ((A 0.20833334) (B 0.2916667) (C 0.2916667) (D 0.083333336) (R 0.125)))
                    (A ((A 0.25) (B 0.1875) (C 0.1875) (D 0.1875) (R 0.1875)))
                    (B ((A 0.2093023) (B 0.21705426) (C 0.21705426) (D 0.21705426) (R 0.13953489)))
                    (R ((A 0.20000002) (B 0.13333334) (C 0.13333334) (D 0.13333334) (R 0.40000004)))
                    (A ((A 0.42857143) (B 0.14285715) (C 0.14285715) (D 0.14285715) (R 0.14285715)))
                    (C ((A 0.1356784) (B 0.19095479) (C 0.44221106) (D 0.14070353) (R 0.09045227))))))))

                 
;; PPM with mixtures and fixed order bound
;; ===========================================================================

(5am:def-suite ppm-mixtures-order-bound :in ppm)
(5am:in-suite ppm-mixtures-order-bound)

(5am:test abracadabra-ppmc2i
  (5am:is (and (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures t :update-exclusion nil :order-bound 2)
                      (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures t :update-exclusion nil :order-bound nil))
               (not (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures t :update-exclusion nil :order-bound 1)
                           (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures t :update-exclusion nil :order-bound nil))))))

(5am:test abracadabra-ppmc1i
  (5am:is (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures t :update-exclusion nil :order-bound 1)
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.59999996) (B 0.09999999) (C 0.09999999) (D 0.09999999) (R 0.09999999)))
                    (R ((A 0.33333334) (B 0.33333334) (C 0.11111111) (D 0.11111111) (R 0.11111111)))
                    (A ((A 0.25) (B 0.25) (C 0.125) (D 0.125) (R 0.25)))
                    (C ((A 0.20000002) (B 0.53333336) (C 0.06666668) (D 0.06666668) (R 0.13333336)))
                    (A ((A 0.26666665) (B 0.19999997) (C 0.19999997) (D 0.13333331) (R 0.19999997)))
                    (D ((A 0.20833334) (B 0.2916667) (C 0.2916667) (D 0.083333336) (R 0.125)))
                    (A ((A 0.25) (B 0.1875) (C 0.1875) (D 0.1875) (R 0.1875)))
                    (B ((A 0.2093023) (B 0.21705426) (C 0.21705426) (D 0.21705426) (R 0.13953489)))
                    (R ((A 0.19148937) (B 0.14893615) (C 0.12765956) (D 0.12765956) (R 0.40425533)))
                    (A ((A 0.4347826) (B 0.1521739) (C 0.13043477) (D 0.13043477) (R 0.1521739)))
                    (C ((A 0.19230768) (B 0.2884615) (C 0.19230768) (D 0.19230768) (R 0.13461538))))))))
                 
(5am:test abracadabra-ppmc0i
  (5am:is (equal (test-ppm '((a b r a c a d a b r a c)) :escape :c :mixtures t :update-exclusion nil :order-bound 0)
                 '((0 (A ((A 0.19999999) (B 0.19999999) (C 0.19999999) (D 0.19999999) (R 0.19999999)))
                    (B ((A 0.59999996) (B 0.09999999) (C 0.09999999) (D 0.09999999) (R 0.09999999)))
                    (R ((A 0.33333334) (B 0.33333334) (C 0.11111111) (D 0.11111111) (R 0.11111111)))
                    (A ((A 0.25) (B 0.25) (C 0.125) (D 0.125) (R 0.25)))
                    (C ((A 0.33333334) (B 0.22222221) (C 0.111111104) (D 0.111111104) (R 0.22222221)))
                    (A ((A 0.26666665) (B 0.19999997) (C 0.19999997) (D 0.13333331) (R 0.19999997)))
                    (D ((A 0.31250003) (B 0.18750003) (C 0.18750003) (D 0.125) (R 0.18750003)))
                    (A ((A 0.25) (B 0.1875) (C 0.1875) (D 0.1875) (R 0.1875)))
                    (B ((A 0.2727273) (B 0.18181819) (C 0.18181819) (D 0.18181819) (R 0.18181819)))
                    (R ((A 0.2647059) (B 0.20588236) (C 0.1764706) (D 0.1764706) (R 0.1764706)))
                    (A ((A 0.25714287) (B 0.19999999) (C 0.17142856) (D 0.17142856) (R 0.19999999)))
                    (C ((A 0.2777778) (B 0.19444445) (C 0.16666667) (D 0.16666667) (R 0.19444445))))))))
                 
;; letlettertele
(5am:test letlettertele-ppmc2i
  (5am:is (equal (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                 (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures t :update-exclusion nil :order-bound 2))))

(5am:test letlettertele-ppmc1i
  (5am:is (not (equal (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                      (test-ppm '((l e t l e t t e r t e l e)) :escape :c :mixtures t :update-exclusion nil :order-bound 1)))))

;; assanissimassa
(5am:test assanissimassa-ppmc3i
  (5am:is (equal (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                 (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures t :update-exclusion nil :order-bound 3))))

(5am:test assanissimassa-ppmc2i
  (5am:is (not (equal (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                      (test-ppm '((a s s a n i s s i m a s s a)) :escape :c :mixtures t :update-exclusion nil :order-bound 2)))))

;; missisippi
;;
;; PPM* predicts the first p at order 1 (the lowest-order deterministic state), while all other predictions are order 2

(5am:test mississippi-ppmc2i
  (5am:is (not (equal (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                      (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures t :update-exclusion nil :order-bound 2)))))

(5am:test mississippi-ppmc1i
  (5am:is (not (equal (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                      (test-ppm '((m i s s i s s i p p i)) :escape :c :mixtures t :update-exclusion nil :order-bound 1)))))

;; woolloomooloo
(5am:test woolloomooloo-ppmc2i
  (5am:is (equal (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures t :update-exclusion nil :order-bound nil) 
                 (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures t :update-exclusion nil :order-bound 2))))

(5am:test woolloomooloo-ppmc1i
  (5am:is (not (equal (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures t :update-exclusion nil :order-bound nil) 
                      (test-ppm '((w o o l l o o m o o l o o)) :escape :c :mixtures t :update-exclusion nil :order-bound 1)))))

;; agcgacgag
(5am:test agcgacgag-ppmc2i
  (5am:is (equal (test-ppm '((a g c g a c g a g)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                 (test-ppm '((a g c g a c g a g)) :escape :c :mixtures t :update-exclusion nil :order-bound 2))))

(5am:test agcgacgag-ppmc1i
  (5am:is (not (equal (test-ppm '((a g c g a c g a g)) :escape :c :mixtures t :update-exclusion nil :order-bound nil)
                      (test-ppm '((a g c g a c g a g)) :escape :c :mixtures t :update-exclusion nil :order-bound 1)))))


;;; Tests with musical pieces

(5am:def-suite ppm-musical-pieces :in ppm)
(5am:in-suite ppm-musical-pieces)

(defvar *chorale*
  ;; J. S. Bach: Chorale 151/126 (BWV 379).
  '(71 71 71 74 72 72 71 71 71 69 71 72 71 69 67 71 71 69 69 67 67 66 76 74 72 71
    69 69 67))

(5am:test chorale-ppmc*
  (5am:is (equal (test-ppm (list *chorale*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
                 '((0 (71 ((66 0.14285715) (67 0.14285715) (69 0.14285715) (71 0.14285715) (72 0.14285715) (74 0.14285715) (76 0.14285715)))
                    (71 ((66 0.07692307) (67 0.07692307) (69 0.07692307) (71 0.5384615) (72 0.07692307) (74 0.07692307) (76 0.07692307)))
                    (71 ((66 0.07692307) (67 0.07692307) (69 0.07692307) (71 0.5384615) (72 0.07692307) (74 0.07692307) (76 0.07692307)))
                    (74 ((66 0.049999997) (67 0.049999997) (69 0.049999997) (71 0.7) (72 0.049999997) (74 0.049999997) (76 0.049999997)))
                    (72 ((66 0.05882353) (67 0.05882353) (69 0.05882353) (71 0.5294118) (72 0.05882353) (74 0.17647061) (76 0.05882353)))
                    (72 ((66 0.08108108) (67 0.08108108) (69 0.08108108) (71 0.4054054) (72 0.13513513) (74 0.13513513) (76 0.08108108)))
                    (71 ((66 0.04477612) (67 0.04477612) (69 0.04477612) (71 0.22388063) (72 0.5223881) (74 0.07462688) (76 0.04477612)))
                    (71 ((66 0.05042017) (67 0.05042017) (69 0.05042017) (71 0.4201681) (72 0.16806722) (74 0.21008405) (76 0.05042017)))
                    (71 ((66 0.06382979) (67 0.06382979) (69 0.06382979) (71 0.26595744) (72 0.21276596) (74 0.26595744) (76 0.06382979)))
                    (69 ((66 0.030927835) (67 0.030927835) (69 0.030927835) (71 0.25773194) (72 0.10309278) (74 0.5154639) (76 0.030927835)))
                    (71 ((66 0.076923065) (67 0.076923065) (69 0.07692307) (71 0.46153846) (72 0.15384614) (74 0.07692307) (76 0.076923065)))
                    (72 ((66 0.058823526) (67 0.058823526) (69 0.117647074) (71 0.4705883) (72 0.11764706) (74 0.117647074) (76 0.058823526)))
                    (71 ((66 0.090909086) (67 0.090909086) (69 0.09090909) (71 0.27272728) (72 0.27272728) (74 0.09090909) (76 0.090909086)))
                    (69 ((66 0.076923065) (67 0.076923065) (69 0.07692307) (71 0.5384615) (72 0.07692307) (74 0.07692307) (76 0.076923065)))
                    (67 ((66 0.052631572) (67 0.052631572) (69 0.10526316) (71 0.52631575) (72 0.15789473) (74 0.05263158) (76 0.052631572)))
                    (71 ((66 0.090909086) (67 0.054545455) (69 0.10909091) (71 0.43636364) (72 0.16363636) (74 0.054545455) (76 0.090909086)))
                    (71 ((66 0.102040805) (67 0.061224483) (69 0.18367347) (71 0.36734694) (72 0.091836736) (74 0.091836736) (76 0.102040805)))
                    (69 ((66 0.105263144) (67 0.063157886) (69 0.15789473) (71 0.31578946) (72 0.09473683) (74 0.15789473) (76 0.105263144)))
                    (69 ((66 0.048543688) (67 0.17475729) (69 0.087378636) (71 0.52427185) (72 0.087378636) (74 0.029126212) (76 0.048543688)))
                    (67 ((66 0.102040805) (67 0.18367344) (69 0.18367344) (71 0.18367344) (72 0.18367344) (74 0.06122448) (76 0.102040805)))
                    (67 ((66 0.058823522) (67 0.07058823) (69 0.14117646) (71 0.52941173) (72 0.105882354) (74 0.035294116) (76 0.058823522)))
                    (66 ((66 0.06849314) (67 0.26712328) (69 0.16438356) (71 0.26712328) (72 0.12328768) (74 0.04109589) (76 0.06849314)))
                    (76 ((66 0.04) (67 0.11999999) (69 0.16) (71 0.39999998) (72 0.11999999) (74 0.04) (76 0.12)))
                    (74 ((66 0.043478265) (67 0.13043478) (69 0.17391306) (71 0.4347826) (72 0.13043478) (74 0.043478265) (76 0.043478265)))
                    (72 ((66 0.020408165) (67 0.061224498) (69 0.08163266) (71 0.20408164) (72 0.5714286) (74 0.04081633) (76 0.020408165)))
                    (71 ((66 0.0153846145) (67 0.046153843) (69 0.061538458) (71 0.27692306) (72 0.5538461) (74 0.030769229) (76 0.0153846145)))
                    (69 ((66 0.03448276) (67 0.10344828) (69 0.31034485) (71 0.31034485) (72 0.10344829) (74 0.10344829) (76 0.03448276)))
                    (69 ((66 0.023255814) (67 0.5813953) (69 0.116279066) (71 0.116279066) (72 0.093023255) (74 0.046511628) (76 0.023255814)))
                    (67 ((66 0.018867925) (67 0.5660377) (69 0.18867925) (71 0.094339624) (72 0.0754717) (74 0.03773585) (76 0.018867925))))))))

(defvar *poulenc*
  ;; Francis Poulenc: Un Joueur de Flûte Berce les Ruines
  '(60 63 65 68 67 65 63 65 67 72 70 68 67 65 63 65 67 62 63 62 60 67 72 74 75 72
    79 84 86 87 89 91 87 86 84 87 80 78 79 86 83 80 79 77 75 83 80 77 75 74 72 67
    68 70 72 74 75 77 79 66 68 67 60 60))

(5am:test poulenc-ppmc*
  (5am:is
   (equal
    (test-ppm (list *poulenc*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil)
    '((0
       (60
        ((60 0.047619034) (62 0.047619034) (63 0.047619034) (65 0.047619034) (66 0.047619034) (67 0.047619034) (68 0.047619034) (70 0.047619034) (72 0.047619034)
         (74 0.047619034) (75 0.047619034) (77 0.047619034) (78 0.047619034) (79 0.047619034) (80 0.047619034) (83 0.047619034) (84 0.047619034) (86 0.047619034)
         (87 0.047619034) (89 0.047619034) (91 0.047619034)))
       (63
        ((60 0.5121948) (62 0.02439023) (63 0.02439023) (65 0.02439023) (66 0.02439023) (67 0.02439023) (68 0.02439023) (70 0.02439023) (72 0.02439023) (74 0.02439023)
         (75 0.02439023) (77 0.02439023) (78 0.02439023) (79 0.02439023) (80 0.02439023) (83 0.02439023) (84 0.02439023) (86 0.02439023) (87 0.02439023) (89 0.02439023)
         (91 0.02439023)))
       (65
        ((60 0.2564104) (62 0.025641039) (63 0.2564104) (65 0.025641039) (66 0.025641039) (67 0.025641039) (68 0.025641039) (70 0.025641039) (72 0.025641039)
         (74 0.025641039) (75 0.025641039) (77 0.025641039) (78 0.025641039) (79 0.025641039) (80 0.025641039) (83 0.025641039) (84 0.025641039) (86 0.025641039)
         (87 0.025641039) (89 0.025641039) (91 0.025641039)))
       (68
        ((60 0.17117111) (62 0.027027017) (63 0.17117111) (65 0.17117111) (66 0.027027017) (67 0.027027017) (68 0.027027017) (70 0.027027017) (72 0.027027017)
         (74 0.027027017) (75 0.027027017) (77 0.027027017) (78 0.027027017) (79 0.027027017) (80 0.027027017) (83 0.027027017) (84 0.027027017) (86 0.027027017)
         (87 0.027027017) (89 0.027027017) (91 0.027027017)))
       (67
        ((60 0.1285714) (62 0.028571423) (63 0.1285714) (65 0.1285714) (66 0.028571423) (67 0.028571423) (68 0.1285714) (70 0.028571423) (72 0.028571423) (74 0.028571423)
         (75 0.028571423) (77 0.028571423) (78 0.028571423) (79 0.028571423) (80 0.028571423) (83 0.028571423) (84 0.028571423) (86 0.028571423) (87 0.028571423)
         (89 0.028571423) (91 0.028571423)))
       (65
        ((60 0.103030264) (62 0.030303018) (63 0.103030264) (65 0.103030264) (66 0.030303018) (67 0.103030264) (68 0.103030264) (70 0.030303018) (72 0.030303018)
         (74 0.030303018) (75 0.030303018) (77 0.030303018) (78 0.030303018) (79 0.030303018) (80 0.030303018) (83 0.030303018) (84 0.030303018) (86 0.030303018)
         (87 0.030303018) (89 0.030303018) (91 0.030303018)))
       (63
        ((60 0.05074626) (62 0.014925369) (63 0.05074626) (65 0.10149252) (66 0.014925369) (67 0.05074626) (68 0.50746256) (70 0.014925369) (72 0.014925369)
         (74 0.014925369) (75 0.014925369) (77 0.014925369) (78 0.014925369) (79 0.014925369) (80 0.014925369) (83 0.014925369) (84 0.014925369) (86 0.014925369)
         (87 0.014925369) (89 0.014925369) (91 0.014925369)))
       (65
        ((60 0.05074626) (62 0.014925369) (63 0.10149252) (65 0.50746256) (66 0.014925369) (67 0.05074626) (68 0.05074626) (70 0.014925369) (72 0.014925369)
         (74 0.014925369) (75 0.014925369) (77 0.014925369) (78 0.014925369) (79 0.014925369) (80 0.014925369) (83 0.014925369) (84 0.014925369) (86 0.014925369)
         (87 0.014925369) (89 0.014925369) (91 0.014925369)))
       (67
        ((60 0.033663377) (62 0.009900994) (63 0.1683169) (65 0.10099014) (66 0.009900994) (67 0.033663377) (68 0.5049507) (70 0.009900994) (72 0.009900994)
         (74 0.009900994) (75 0.009900994) (77 0.009900994) (78 0.009900994) (79 0.009900994) (80 0.009900994) (83 0.009900994) (84 0.009900994) (86 0.009900994)
         (87 0.009900994) (89 0.009900994) (91 0.009900994)))
       (72
        ((60 0.046070475) (62 0.013550139) (63 0.09214095) (65 0.5067752) (66 0.013550139) (67 0.09214095) (68 0.046070475) (70 0.013550139) (72 0.013550139)
         (74 0.013550139) (75 0.013550139) (77 0.013550139) (78 0.013550139) (79 0.013550139) (80 0.013550139) (83 0.013550139) (84 0.013550139) (86 0.013550139)
         (87 0.013550139) (89 0.013550139) (91 0.013550139)))
       (70
        ((60 0.064) (62 0.024) (63 0.128) (65 0.192) (66 0.024) (67 0.128) (68 0.064) (70 0.024) (72 0.064) (74 0.024) (75 0.024) (77 0.024) (78 0.024) (79 0.024)
         (80 0.024) (83 0.024) (84 0.024) (86 0.024) (87 0.024) (89 0.024) (91 0.024)))
       (68
        ((60 0.05703421) (62 0.026615964) (63 0.11406842) (65 0.17110263) (66 0.026615964) (67 0.11406842) (68 0.05703421) (70 0.05703421) (72 0.05703421) (74 0.026615964)
         (75 0.026615964) (77 0.026615964) (78 0.026615964) (79 0.026615964) (80 0.026615964) (83 0.026615964) (84 0.026615964) (86 0.026615964) (87 0.026615964)
         (89 0.026615964) (91 0.026615964)))
       (67
        ((60 0.029821064) (62 0.013916496) (63 0.05964213) (65 0.0894632) (66 0.013916496) (67 0.50695807) (68 0.05964213) (70 0.029821064) (72 0.029821064)
         (74 0.013916496) (75 0.013916496) (77 0.013916496) (78 0.013916496) (79 0.013916496) (80 0.013916496) (83 0.013916496) (84 0.013916496) (86 0.013916496)
         (87 0.013916496) (89 0.013916496) (91 0.013916496)))
       (65
        ((60 0.021037864) (62 0.00981767) (63 0.042075727) (65 0.50490874) (66 0.00981767) (67 0.063113585) (68 0.042075727) (70 0.021037864) (72 0.16830292)
         (74 0.00981767) (75 0.00981767) (77 0.00981767) (78 0.00981767) (79 0.00981767) (80 0.00981767) (83 0.00981767) (84 0.00981767) (86 0.00981767) (87 0.00981767)
         (89 0.00981767) (91 0.00981767)))
       (63
        ((60 0.021645026) (62 0.010101012) (63 0.50505054) (65 0.086580105) (66 0.010101012) (67 0.10101011) (68 0.10101011) (70 0.021645026) (72 0.021645026)
         (74 0.010101012) (75 0.010101012) (77 0.010101012) (78 0.010101012) (79 0.010101012) (80 0.010101012) (83 0.010101012) (84 0.010101012) (86 0.010101012)
         (87 0.010101012) (89 0.010101012) (91 0.010101012)))
       (65
        ((60 0.018679952) (62 0.0087173125) (63 0.05603986) (65 0.6724784) (66 0.0087173125) (67 0.05603986) (68 0.037359904) (70 0.018679952) (72 0.018679952)
         (74 0.0087173125) (75 0.0087173125) (77 0.0087173125) (78 0.0087173125) (79 0.0087173125) (80 0.0087173125) (83 0.0087173125) (84 0.0087173125) (86 0.0087173125)
         (87 0.0087173125) (89 0.0087173125) (91 0.0087173125)))
       (67
        ((60 0.013416813) (62 0.0062611788) (63 0.1341681) (65 0.06708406) (66 0.0062611788) (67 0.50313044) (68 0.16771016) (70 0.013416813) (72 0.013416813)
         (74 0.0062611788) (75 0.0062611788) (77 0.0062611788) (78 0.0062611788) (79 0.0062611788) (80 0.0062611788) (83 0.0062611788) (84 0.0062611788) (86 0.0062611788)
         (87 0.0062611788) (89 0.0062611788) (91 0.0062611788)))
       (62
        ((60 0.013979499) (62 0.0065237666) (63 0.0419385) (65 0.251631) (66 0.0065237666) (67 0.055917997) (68 0.027958998) (70 0.013979499) (72 0.503262)
         (74 0.0065237666) (75 0.0065237666) (77 0.0065237666) (78 0.0065237666) (79 0.0065237666) (80 0.0065237666) (83 0.0065237666) (84 0.0065237666) (86 0.0065237666)
         (87 0.0065237666) (89 0.0065237666) (91 0.0065237666)))
       (63
        ((60 0.039325844) (62 0.039325844) (63 0.11797754) (65 0.19662923) (66 0.02247191) (67 0.15730338) (68 0.07865169) (70 0.039325844) (72 0.039325844) (74 0.02247191)
         (75 0.02247191) (77 0.02247191) (78 0.02247191) (79 0.02247191) (80 0.02247191) (83 0.02247191) (84 0.02247191) (86 0.02247191) (87 0.02247191) (89 0.02247191)
         (91 0.02247191)))
       (62
        ((60 0.01143791) (62 0.01143791) (63 0.04575164) (65 0.754902) (66 0.0065359487) (67 0.04575164) (68 0.02287582) (70 0.01143791) (72 0.01143791) (74 0.0065359487)
         (75 0.0065359487) (77 0.0065359487) (78 0.0065359487) (79 0.0065359487) (80 0.0065359487) (83 0.0065359487) (84 0.0065359487) (86 0.0065359487) (87 0.0065359487)
         (89 0.0065359487) (91 0.0065359487)))
       (60
        ((60 0.021084335) (62 0.04216867) (63 0.506024) (65 0.10542167) (66 0.01204819) (67 0.08433734) (68 0.04216867) (70 0.021084335) (72 0.021084335) (74 0.01204819)
         (75 0.01204819) (77 0.01204819) (78 0.01204819) (79 0.01204819) (80 0.01204819) (83 0.01204819) (84 0.01204819) (86 0.01204819) (87 0.01204819) (89 0.01204819)
         (91 0.01204819)))
       (67
        ((60 0.040462416) (62 0.040462416) (63 0.5057802) (65 0.101156056) (66 0.011560691) (67 0.08092483) (68 0.040462416) (70 0.020231208) (72 0.020231208)
         (74 0.011560691) (75 0.011560691) (77 0.011560691) (78 0.011560691) (79 0.011560691) (80 0.011560691) (83 0.011560691) (84 0.011560691) (86 0.011560691)
         (87 0.011560691) (89 0.011560691) (91 0.011560691)))
       (72
        ((60 0.039399635) (62 0.14446533) (63 0.07879927) (65 0.28893065) (66 0.011257038) (67 0.09849908) (68 0.039399635) (70 0.019699818) (72 0.14446533)
         (74 0.011257038) (75 0.011257038) (77 0.011257038) (78 0.011257038) (79 0.011257038) (80 0.011257038) (83 0.011257038) (84 0.011257038) (86 0.011257038)
         (87 0.011257038) (89 0.011257038) (91 0.011257038)))
       (74
        ((60 0.033653848) (62 0.033653848) (63 0.067307696) (65 0.08413462) (66 0.009615384) (67 0.08413462) (68 0.033653848) (70 0.5048077) (72 0.033653848)
         (74 0.009615384) (75 0.009615384) (77 0.009615384) (78 0.009615384) (79 0.009615384) (80 0.009615384) (83 0.009615384) (84 0.009615384) (86 0.009615384)
         (87 0.009615384) (89 0.009615384) (91 0.009615384)))
       (75
        ((60 0.061904743) (62 0.061904743) (63 0.12380949) (65 0.15476185) (66 0.021428565) (67 0.15476185) (68 0.061904743) (70 0.030952372) (72 0.061904743)
         (74 0.030952372) (75 0.021428565) (77 0.021428565) (78 0.021428565) (79 0.021428565) (80 0.021428565) (83 0.021428565) (84 0.021428565) (86 0.021428565)
         (87 0.021428565) (89 0.021428565) (91 0.021428565)))
       (72
        ((60 0.05853657) (62 0.05853657) (63 0.11707314) (65 0.14634143) (66 0.024390236) (67 0.14634143) (68 0.05853657) (70 0.029268285) (72 0.05853657) (74 0.029268285)
         (75 0.029268285) (77 0.024390236) (78 0.024390236) (79 0.024390236) (80 0.024390236) (83 0.024390236) (84 0.024390236) (86 0.024390236) (87 0.024390236)
         (89 0.024390236) (91 0.024390236)))
       (79
        ((60 0.029776681) (62 0.029776681) (63 0.059553362) (65 0.0744417) (66 0.012406949) (67 0.0744417) (68 0.029776681) (70 0.25310177) (72 0.04466502) (74 0.25310177)
         (75 0.014888341) (77 0.012406949) (78 0.012406949) (79 0.012406949) (80 0.012406949) (83 0.012406949) (84 0.012406949) (86 0.012406949) (87 0.012406949)
         (89 0.012406949) (91 0.012406949)))
       (84
        ((60 0.054054044) (62 0.054054044) (63 0.10810809) (65 0.13513511) (66 0.027027028) (67 0.13513511) (68 0.054054044) (70 0.027027022) (72 0.08108107)
         (74 0.027027022) (75 0.027027022) (77 0.027027028) (78 0.027027028) (79 0.027027022) (80 0.027027028) (83 0.027027028) (84 0.027027028) (86 0.027027028)
         (87 0.027027028) (89 0.027027028) (91 0.027027028)))
       (86
        ((60 0.051546406) (62 0.051546406) (63 0.10309281) (65 0.12886602) (66 0.030927844) (67 0.12886602) (68 0.051546406) (70 0.025773203) (72 0.077319615)
         (74 0.025773203) (75 0.025773203) (77 0.030927844) (78 0.030927844) (79 0.025773203) (80 0.030927844) (83 0.030927844) (84 0.025773203) (86 0.030927844)
         (87 0.030927844) (89 0.030927844) (91 0.030927844)))
       (87
        ((60 0.04931506) (62 0.04931506) (63 0.09863012) (65 0.123287655) (66 0.035616435) (67 0.123287655) (68 0.04931506) (70 0.02465753) (72 0.0739726) (74 0.02465753)
         (75 0.02465753) (77 0.035616435) (78 0.035616435) (79 0.02465753) (80 0.035616435) (83 0.035616435) (84 0.02465753) (86 0.02465753) (87 0.035616435)
         (89 0.035616435) (91 0.035616435)))
       (89
        ((60 0.04733728) (62 0.04733728) (63 0.09467456) (65 0.1183432) (66 0.041420117) (67 0.1183432) (68 0.04733728) (70 0.02366864) (72 0.07100592) (74 0.02366864)
         (75 0.02366864) (77 0.041420117) (78 0.041420117) (79 0.02366864) (80 0.041420117) (83 0.041420117) (84 0.02366864) (86 0.02366864) (87 0.02366864)
         (89 0.041420117) (91 0.041420117)))
       (91
        ((60 0.045602612) (62 0.045602612) (63 0.091205224) (65 0.11400653) (66 0.04885994) (67 0.11400653) (68 0.045602612) (70 0.022801306) (72 0.068403915)
         (74 0.022801306) (75 0.022801306) (77 0.04885994) (78 0.04885994) (79 0.022801306) (80 0.04885994) (83 0.04885994) (84 0.022801306) (86 0.022801306)
         (87 0.022801306) (89 0.022801306) (91 0.04885994)))
       (87
        ((60 0.044117652) (62 0.044117652) (63 0.088235304) (65 0.110294126) (66 0.05882353) (67 0.110294126) (68 0.044117652) (70 0.022058826) (72 0.066176474)
         (74 0.022058826) (75 0.022058826) (77 0.05882353) (78 0.05882353) (79 0.022058826) (80 0.05882353) (83 0.05882353) (84 0.022058826) (86 0.022058826)
         (87 0.022058826) (89 0.022058826) (91 0.022058826)))
       (86
        ((60 0.02142857) (62 0.02142857) (63 0.04285714) (65 0.05357143) (66 0.028571425) (67 0.05357143) (68 0.02142857) (70 0.010714285) (72 0.032142855) (74 0.010714285)
         (75 0.010714285) (77 0.028571425) (78 0.028571425) (79 0.010714285) (80 0.028571425) (83 0.028571425) (84 0.010714285) (86 0.010714285) (87 0.02142857)
         (89 0.5142857) (91 0.010714285)))
       (84
        ((60 0.02142857) (62 0.02142857) (63 0.04285714) (65 0.05357143) (66 0.028571425) (67 0.05357143) (68 0.02142857) (70 0.010714285) (72 0.032142855) (74 0.010714285)
         (75 0.010714285) (77 0.028571425) (78 0.028571425) (79 0.010714285) (80 0.028571425) (83 0.028571425) (84 0.010714285) (86 0.02142857) (87 0.5142857)
         (89 0.010714285) (91 0.010714285)))
       (87
        ((60 0.020979019) (62 0.020979019) (63 0.041958038) (65 0.052447546) (66 0.02797203) (67 0.052447546) (68 0.020979019) (70 0.010489509) (72 0.03146853)
         (74 0.010489509) (75 0.010489509) (77 0.02797203) (78 0.02797203) (79 0.010489509) (80 0.02797203) (83 0.02797203) (84 0.020979019) (86 0.513986) (87 0.020979019)
         (89 0.010489509) (91 0.010489509)))
       (80
        ((60 0.020979019) (62 0.020979019) (63 0.041958038) (65 0.052447546) (66 0.02797203) (67 0.052447546) (68 0.020979019) (70 0.010489509) (72 0.03146853)
         (74 0.010489509) (75 0.010489509) (77 0.02797203) (78 0.02797203) (79 0.010489509) (80 0.02797203) (83 0.02797203) (84 0.020979019) (86 0.256993) (87 0.03146853)
         (89 0.256993) (91 0.010489509)))
       (78
        ((60 0.0395257) (62 0.0395257) (63 0.0790514) (65 0.09881424) (66 0.06719369) (67 0.09881424) (68 0.0395257) (70 0.01976285) (72 0.059288543) (74 0.01976285)
         (75 0.01976285) (77 0.06719369) (78 0.06719369) (79 0.01976285) (80 0.01976285) (83 0.06719369) (84 0.0395257) (86 0.0395257) (87 0.059288543) (89 0.01976285)
         (91 0.01976285)))
       (79
        ((60 0.038834956) (62 0.038834956) (63 0.07766991) (65 0.0970874) (66 0.087378666) (67 0.0970874) (68 0.038834956) (70 0.019417478) (72 0.058252435)
         (74 0.019417478) (75 0.019417478) (77 0.087378666) (78 0.019417478) (79 0.019417478) (80 0.019417478) (83 0.087378666) (84 0.038834956) (86 0.038834956)
         (87 0.058252435) (89 0.019417478) (91 0.019417478)))
       (86
        ((60 0.01895735) (62 0.01895735) (63 0.0379147) (65 0.047393367) (66 0.04265403) (67 0.047393367) (68 0.01895735) (70 0.009478675) (72 0.028436022) (74 0.009478675)
         (75 0.009478675) (77 0.04265403) (78 0.009478675) (79 0.01895735) (80 0.009478675) (83 0.04265403) (84 0.5213271) (86 0.01895735) (87 0.028436022) (89 0.009478675)
         (91 0.009478675)))
       (83
        ((60 0.019704431) (62 0.019704431) (63 0.039408863) (65 0.049261086) (66 0.044334967) (67 0.049261086) (68 0.019704431) (70 0.009852216) (72 0.02955665)
         (74 0.009852216) (75 0.009852216) (77 0.044334967) (78 0.009852216) (79 0.019704431) (80 0.009852216) (83 0.044334967) (84 0.26108372) (86 0.02955665)
         (87 0.26108372) (89 0.009852216) (91 0.009852216)))
       (80
        ((60 0.03726708) (62 0.03726708) (63 0.07453416) (65 0.093167715) (66 0.118012436) (67 0.093167715) (68 0.03726708) (70 0.01863354) (72 0.055900626) (74 0.01863354)
         (75 0.01863354) (77 0.118012436) (78 0.01863354) (79 0.03726708) (80 0.01863354) (83 0.01863354) (84 0.03726708) (86 0.055900626) (87 0.055900626) (89 0.01863354)
         (91 0.01863354)))
       (79
        ((60 0.017595308) (62 0.017595308) (63 0.035190616) (65 0.043988273) (66 0.055718478) (67 0.043988273) (68 0.017595308) (70 0.008797654) (72 0.026392963)
         (74 0.008797654) (75 0.008797654) (77 0.055718478) (78 0.5278593) (79 0.017595308) (80 0.017595308) (83 0.008797654) (84 0.017595308) (86 0.026392963)
         (87 0.026392963) (89 0.008797654) (91 0.008797654)))
       (77
        ((60 0.01857585) (62 0.01857585) (63 0.0371517) (65 0.04643963) (66 0.058823522) (67 0.04643963) (68 0.01857585) (70 0.009287925) (72 0.027863776) (74 0.009287925)
         (75 0.009287925) (77 0.058823522) (78 0.009287925) (79 0.027863776) (80 0.01857585) (83 0.009287925) (84 0.26470587) (86 0.26470587) (87 0.027863776)
         (89 0.009287925) (91 0.009287925)))
       (75
        ((60 0.037037037) (62 0.037037037) (63 0.074074075) (65 0.0925926) (66 0.1851852) (67 0.0925926) (68 0.037037037) (70 0.018518519) (72 0.055555556) (74 0.018518519)
         (75 0.018518519) (77 0.018518519) (78 0.018518519) (79 0.055555556) (80 0.037037037) (83 0.018518519) (84 0.037037037) (86 0.055555556) (87 0.055555556)
         (89 0.018518519) (91 0.018518519)))
       (83
        ((60 0.017543864) (62 0.017543864) (63 0.035087727) (65 0.043859657) (66 0.08771931) (67 0.043859657) (68 0.017543864) (70 0.008771932) (72 0.5438597)
         (74 0.008771932) (75 0.017543864) (77 0.008771932) (78 0.008771932) (79 0.026315793) (80 0.017543864) (83 0.008771932) (84 0.017543864) (86 0.026315793)
         (87 0.026315793) (89 0.008771932) (91 0.008771932)))
       (80
        ((60 0.016949153) (62 0.016949153) (63 0.033898305) (65 0.042372882) (66 0.084745765) (67 0.042372882) (68 0.016949153) (70 0.008474576) (72 0.025423728)
         (74 0.008474576) (75 0.016949153) (77 0.008474576) (78 0.008474576) (79 0.025423728) (80 0.5423729) (83 0.016949153) (84 0.016949153) (86 0.025423728)
         (87 0.025423728) (89 0.008474576) (91 0.008474576)))
       (77
        ((60 0.011173185) (62 0.011173185) (63 0.02234637) (65 0.027932962) (66 0.055865917) (67 0.027932962) (68 0.011173185) (70 0.0055865925) (72 0.01675978)
         (74 0.0055865925) (75 0.011173185) (77 0.0055865925) (78 0.17597768) (79 0.527933) (80 0.01675978) (83 0.011173185) (84 0.011173185) (86 0.01675978)
         (87 0.01675978) (89 0.0055865925) (91 0.0055865925)))
       (75
        ((60 0.016393445) (62 0.016393445) (63 0.03278689) (65 0.04098361) (66 0.08196723) (67 0.04098361) (68 0.016393445) (70 0.008196723) (72 0.024590166)
         (74 0.008196723) (75 0.5409837) (77 0.016393445) (78 0.008196723) (79 0.024590166) (80 0.024590166) (83 0.016393445) (84 0.016393445) (86 0.024590166)
         (87 0.024590166) (89 0.008196723) (91 0.008196723)))
       (74
        ((60 0.010989009) (62 0.010989009) (63 0.021978019) (65 0.027472524) (66 0.054945048) (67 0.027472524) (68 0.010989009) (70 0.0054945047) (72 0.17582417)
         (74 0.0054945047) (75 0.016483514) (77 0.010989009) (78 0.0054945047) (79 0.016483514) (80 0.016483514) (83 0.5274725) (84 0.010989009) (86 0.016483514)
         (87 0.016483514) (89 0.0054945047) (91 0.0054945047)))
       (72
        ((60 0.016129034) (62 0.016129034) (63 0.032258067) (65 0.04032259) (66 0.080645174) (67 0.04032259) (68 0.016129034) (70 0.008064517) (72 0.024193551)
         (74 0.016129034) (75 0.54032266) (77 0.016129034) (78 0.008064517) (79 0.024193551) (80 0.024193551) (83 0.016129034) (84 0.016129034) (86 0.024193551)
         (87 0.024193551) (89 0.008064517) (91 0.008064517)))
       (67
        ((60 0.016666662) (62 0.016666662) (63 0.033333324) (65 0.041666657) (66 0.083333306) (67 0.041666657) (68 0.016666662) (70 0.18055551) (72 0.033333324)
         (74 0.18055551) (75 0.024999995) (77 0.016666662) (78 0.008333331) (79 0.18055551) (80 0.024999995) (83 0.016666662) (84 0.016666662) (86 0.024999995)
         (87 0.024999995) (89 0.008333331) (91 0.008333331)))
       (68
        ((60 0.013100434) (62 0.13318776) (63 0.026200868) (65 0.2663755) (66 0.06550218) (67 0.039301302) (68 0.013100434) (70 0.006550217) (72 0.2663755) (74 0.013100434)
         (75 0.019650651) (77 0.013100434) (78 0.006550217) (79 0.019650651) (80 0.019650651) (83 0.013100434) (84 0.013100434) (86 0.019650651) (87 0.019650651)
         (89 0.006550217) (91 0.006550217)))
       (70
        ((60 0.010471204) (62 0.010471204) (63 0.020942409) (65 0.026178014) (66 0.052356023) (67 0.70157075) (68 0.015706807) (70 0.005235602) (72 0.020942409)
         (74 0.010471204) (75 0.015706807) (77 0.010471204) (78 0.005235602) (79 0.015706807) (80 0.015706807) (83 0.010471204) (84 0.010471204) (86 0.015706807)
         (87 0.015706807) (89 0.005235602) (91 0.005235602)))
       (72
        ((60 0.015151517) (62 0.015151517) (63 0.030303033) (65 0.03787879) (66 0.07575757) (67 0.04545455) (68 0.5378788) (70 0.015151517) (72 0.030303033)
         (74 0.015151517) (75 0.022727275) (77 0.015151517) (78 0.0075757583) (79 0.022727275) (80 0.022727275) (83 0.015151517) (84 0.015151517) (86 0.022727275)
         (87 0.022727275) (89 0.0075757583) (91 0.0075757583)))
       (74
        ((60 0.017543864) (62 0.017543864) (63 0.035087727) (65 0.043859657) (66 0.08771931) (67 0.13596493) (68 0.026315793) (70 0.13596493) (72 0.043859657)
         (74 0.13596493) (75 0.026315793) (77 0.017543864) (78 0.008771932) (79 0.13596493) (80 0.026315793) (83 0.017543864) (84 0.017543864) (86 0.026315793)
         (87 0.026315793) (89 0.008771932) (91 0.008771932)))
       (75
        ((60 0.010309278) (62 0.010309278) (63 0.020618556) (65 0.025773196) (66 0.051546384) (67 0.030927831) (68 0.015463916) (70 0.010309278) (72 0.17525773)
         (74 0.015463916) (75 0.52577317) (77 0.010309278) (78 0.005154639) (79 0.015463916) (80 0.015463916) (83 0.010309278) (84 0.010309278) (86 0.015463916)
         (87 0.015463916) (89 0.005154639) (91 0.005154639)))
       (77
        ((60 0.009374999) (62 0.009374999) (63 0.018749999) (65 0.0234375) (66 0.046874996) (67 0.028124997) (68 0.014062499) (70 0.009374999) (72 0.52343744)
         (74 0.10468749) (75 0.018749999) (77 0.009374999) (78 0.0046874997) (79 0.014062499) (80 0.014062499) (83 0.10468749) (84 0.009374999) (86 0.014062499)
         (87 0.014062499) (89 0.0046874997) (91 0.0046874997)))
       (79
        ((60 0.009433962) (62 0.009433962) (63 0.018867925) (65 0.023584906) (66 0.047169816) (67 0.028301887) (68 0.014150944) (70 0.009433962) (72 0.023584906)
         (74 0.014150944) (75 0.6981133) (77 0.014150944) (78 0.004716981) (79 0.014150944) (80 0.014150944) (83 0.009433962) (84 0.009433962) (86 0.014150944)
         (87 0.014150944) (89 0.004716981) (91 0.004716981)))
       (66
        ((60 0.015151517) (62 0.015151517) (63 0.030303033) (65 0.03787879) (66 0.07575757) (67 0.04545455) (68 0.022727275) (70 0.015151517) (72 0.03787879)
         (74 0.022727275) (75 0.030303033) (77 0.17929295) (78 0.0075757583) (79 0.030303033) (80 0.022727275) (83 0.015151517) (84 0.17929295) (86 0.17929295)
         (87 0.022727275) (89 0.0075757583) (91 0.0075757583)))
       (68
        ((60 0.03333334) (62 0.03333334) (63 0.06666668) (65 0.08333334) (66 0.01666667) (67 0.10000001) (68 0.050000004) (70 0.03333334) (72 0.08333334) (74 0.050000004)
         (75 0.06666668) (77 0.050000004) (78 0.01666667) (79 0.06666668) (80 0.050000004) (83 0.03333334) (84 0.03333334) (86 0.050000004) (87 0.050000004) (89 0.01666667)
         (91 0.01666667)))
       (67
        ((60 0.01219512) (62 0.01219512) (63 0.02439024) (65 0.030487798) (66 0.00609756) (67 0.4512195) (68 0.02439024) (70 0.22560975) (72 0.030487798) (74 0.018292682)
         (75 0.02439024) (77 0.018292682) (78 0.00609756) (79 0.02439024) (80 0.018292682) (83 0.01219512) (84 0.01219512) (86 0.018292682) (87 0.018292682) (89 0.00609756)
         (91 0.00609756)))
       (60
        ((60 0.0052493443) (62 0.043963257) (63 0.010498689) (65 0.7034122) (66 0.0026246721) (67 0.018372703) (68 0.043963257) (70 0.0052493443) (72 0.087926514)
         (74 0.007874016) (75 0.010498689) (77 0.007874016) (78 0.0026246721) (79 0.010498689) (80 0.007874016) (83 0.0052493443) (84 0.0052493443) (86 0.007874016)
         (87 0.007874016) (89 0.0026246721) (91 0.0026246721)))
       (60
        ((60 0.024000006) (62 0.016000004) (63 0.29200006) (65 0.04000001) (66 0.008000002) (67 0.29200006) (68 0.03200001) (70 0.016000004) (72 0.04000001)
         (74 0.024000006) (75 0.03200001) (77 0.024000006) (78 0.008000002) (79 0.03200001) (80 0.024000006) (83 0.016000004) (84 0.016000004) (86 0.024000006)
         (87 0.024000006) (89 0.008000002) (91 0.008000002))))))))
    
(defvar *couperin*
  ;; Louis Couperin: unmeasured prelude, no. 7
  '(45 52 57 60 64 69 45 52 57 60 64 69 45 45 44 52 60 60 59 64 64 71 45 57 76 74
    72 71 72 72 72 72 72 72 72 72 52 64 69 69 71 71 71 71 71 71 50 52 54 55 52 53
    52 50 48 48 47 69 71 72 55 74 62 67 48 67 69 71 57 72 72 57 64 65 72 72 72 60
    62 66 71 71 62 68 66 68 64 64 64 64 59 59 60 64 68 68 69 69 50 49 49 50 59 64
    64 65 69 47 48 50 52 53 50 50 52 60 64 69 52 60 60 59 69 69 68 68 68 45 52 57
    61 64 69 45 52 57 62 61 64 69))

(5am:test couperin-ppmc*
  (5am:is (equal (test-ppm (list *couperin*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil :detail 1)
                 4.307855)))

(5am:test couperin-ppmc*i
  (5am:is (equal (test-ppm (list *couperin*) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 1)
                 4.195832)))

(defvar *hindemith*
  ;; Paul Hindemith: Acht Stücke Für Flöte Allein: VI. Lied, Leicht Bewegt
  '(84 83 85 86 81 82 81 80 80 80 79 77 79 76 83 73 72 71 72 77 76 75 77 79 80 82
    84 85 87 88 88 87 82 77 78 83 81 79 77 76 75 77 78 73 74 72 71 71 70 69 68 67
    68 70 62 73 74 63 78 79 92 90 89 88 88 91 87 86 85 84 83 85 86 81 82 81 80 80
    80 79 77 79 76 83 73 71 73 74 74 74 73 71 73 70 77 67 68 69 70 70 68 69 70 70
    68 69 70 63 63 68 66 63 62 70 63 68 66 63 62 70 63 68 66 63 62))

(5am:test hindemith-ppmc*
  (5am:is (equal (test-ppm (list *hindemith*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil :detail 1)
                 4.1466417)))

(5am:test hindemith-ppmc*i
  (5am:is (equal (test-ppm (list *hindemith*) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 1)
                 4.210231)))

(defvar *wtc1-1*
  ;; Bach: right hand of the Well-tempered Clavier, book 1, prelude 1 in C Major
  '(60 64 67 72 76 67 72 76 60 64 67 72 76 67 72 76 60 62 69 74 77 69 74 77 60 62
    69 74 77 69 74 77 59 62 67 74 77 67 74 77 59 62 67 74 77 67 74 77 60 64 67 72
    76 67 72 76 60 64 67 72 76 67 72 76 60 64 69 76 81 69 76 81 60 64 69 76 81 69
    76 81 60 62 66 69 74 66 69 74 60 62 66 69 74 66 69 74 59 62 67 74 79 67 74 79
    59 62 67 74 79 67 74 79 59 60 64 67 72 64 67 72 59 60 64 67 72 64 67 72 57 60
    64 67 72 64 67 72 57 60 64 67 72 64 67 72 50 57 62 66 72 62 66 72 50 57 62 66
    72 62 66 72 55 59 62 67 71 62 67 71 55 59 62 67 71 62 67 71 55 58 64 67 73 64
    67 73 55 58 64 67 73 64 67 73 53 57 62 69 74 62 69 74 53 57 62 69 74 62 69 74
    53 56 62 65 71 62 65 71 53 56 62 65 71 62 65 71 52 55 60 67 72 60 67 72 52 55
    60 67 72 60 67 72 52 53 57 60 65 57 60 65 52 53 57 60 65 57 60 65 50 53 57 60
    65 57 60 65 50 53 57 60 65 57 60 65 43 50 55 59 65 55 59 65 43 50 55 59 65 55
    59 65 48 52 55 60 64 55 60 64 48 52 55 60 64 55 60 64 48 55 58 60 64 58 60 64
    48 55 58 60 64 58 60 64 41 53 57 60 64 57 60 64 41 53 57 60 64 57 60 64 42 48
    57 60 63 57 60 63 42 48 57 60 63 57 60 63 44 53 59 60 62 59 60 62 44 53 59 60
    62 59 60 62 43 53 55 59 62 55 59 62 43 53 55 59 62 55 59 62 43 52 55 60 64 55
    60 64 43 52 55 60 64 55 60 64 43 50 55 60 65 55 60 65 43 50 55 60 65 55 60 65
    43 50 55 59 65 55 59 65 43 50 55 59 65 55 59 65 43 51 57 60 66 57 60 66 43 51
    57 60 66 57 60 66 43 52 55 60 67 55 60 67 43 52 55 60 67 55 60 67 43 50 55 60
    65 55 60 65 43 50 55 60 65 55 60 65 43 50 55 59 65 55 59 65 43 50 55 59 65 55
    59 65 36 48 55 58 64 55 58 64 36 48 55 58 64 55 58 64 36 48 53 57 60 65 60 57
    60 57 53 57 53 50 53 50 36 47 67 71 74 77 74 71 74 71 67 71 62 65 64 62 60))

(5am:test wtc1-1-ppmc*
  (5am:is (equal (test-ppm (list *wtc1-1*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil :detail 1)
                 2.6960666)))

(5am:test wtc1-1-ppmc*i
  (5am:is (equal (test-ppm (list *wtc1-1*) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 1)
                 2.6136842)))

(defvar *syrinx*
  ;; Debussy: Syrinx 
  '(82 81 83 80 79 81 78 77 76 73 82 84 83 82 82 81 83 80 79 81 78 77 76 73 70 66
    67 71 66 67 72 66 67 73 76 73 70 66 67 71 68 71 73 76 80 80 83 85 87 82 70 69
    71 68 67 69 66 65 64 61 70 69 71 68 67 69 66 68 70 73 75 77 75 73 70 68 61 63
    66 68 70 73 75 77 75 73 70 73 75 78 81 80 79 78 75 74 73 72 69 68 67 66 63 65
    64 63 65 64 63 65 64 63 65 64 63 64 63 62 64 61 60 61 66 69 62 65 62 61 73 62
    64 61 60 61 66 69 62 65 62 61 75 73 71 70 68 63 66 68 70 73 75 73 75 77 75 73
    71 70 71 73 74 73 71 70 71 74 76 74 71 70 69 68 66 62 66 68 69 70 75 73 70 78
    77 70 77 78 80 82 82 81 83 80 79 81 78 77 76 73 82 85 86 85 82 81 83 80 79 81
    78 77 76 73 70 69 71 68 67 69 66 65 64 61 70 69 71 68 67 69 66 65 64 61 61 65
    64 61 69 67 61 71 69 67 65 63 61))

(5am:test syrinx-ppmc*
  (5am:is (equal (test-ppm (list *syrinx*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil :detail 1)
                 3.6204462)))

(5am:test syrinx-ppmc*i
  (5am:is (equal (test-ppm (list *syrinx*) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 1)
                 3.5496502)))

(defvar *varese*
  ;; Edgar Varese: Density 21.5 
  '(65 64 66 61 66 61 67 65 64 66 67 61 67 66 67 66 64 61 67 61 67 69 70 67 70 67
    70 72 73 72 73 72 73 72 73 72 73 72 74 80 74 68 74 80 63 69 75 81 69 82 88 76
    75 77 74 77 74 76 78 65 66 91 71 70 71 71 69 71 68 71 85 84 86 71 70 71 69 70
    71 69 70 84 84 84 64 61 64 61 61 61 64 74 61 74 61 62 68 74 68 62 75 91 90 78
    77 91 90 78 91 90 78 77 77 67 78 79 66 67 68 69 64 70 80 83 93 83 90 93 90 83
    93 83 90 93 83 90 93 90 83 93 83 90 93 90 93 90 93 90 93 90 83 84 75 84 75 75
    74 75 73 75 74 73 75 73 74 74 75 73 75 71 66 65 67 66 65 67 65 66 67 66 65 67
    62 68 69 76 82 85 98 95 98 95 98 98 95 98 95 95 98 95 98 95 98 98 68 68 68 69
    67 84 78 77 84 78 77 84 78 77 84 64 62 61 64 61 64 66 67 64 67 81 70 64 70 60
    64 74 64 60 74 60 64 70 74 78 85 87 89 95))

(5am:test syrinx-ppmc*
  (5am:is (equal (test-ppm (list *varese*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil :detail 1)
                 4.428695)))

(5am:test syrinx-ppmc*i
  (5am:is (equal (test-ppm (list *varese*) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 1)
                 4.2964673)))

(defvar *partita-2*
  ;; J. S. Bach: Solo Partitas for Flute, A-minor: 2nd Movement “Corrente”
  '(76 69 71 72 74 76 78 80 81 83 84 69 67 83 65 81 80 81 64 62 83 81 80 83 81 80
    77 76 74 72 74 76 72 69 84 83 81 79 77 76 74 76 77 74 71 86 84 83 81 79 77 76
    77 79 76 72 74 76 72 77 79 81 77 74 76 77 74 71 72 74 71 76 77 79 76 72 74 76
    72 69 71 72 69 74 76 77 74 72 71 67 69 71 72 74 76 77 68 69 71 74 76 74 72 71
    72 71 69 76 72 71 69 76 81 80 81 72 63 72 81 81 63 72 81 81 71 81 79 78 79 78
    76 83 79 78 76 83 84 83 84 76 66 74 84 84 68 74 83 74 68 74 72 71 69 71 72 76
    69 71 72 76 81 83 84 81 87 69 72 71 69 67 66 67 71 76 83 81 79 78 76 79 78 76
    75 76 70 71 73 76 78 76 74 73 75 78 79 81 78 76 75 73 71 69 66 67 71 76 79 83
    76 71 75 76 71 72 69 67 76 66 75 64 71 64 66 68 69 71 72 74 76 77 76 74 72 69
    84 67 66 84 83 84 64 62 84 83 84 86 83 79 77 76 74 72 71 69 72 77 79 81 77 74
    76 77 74 72 71 69 67 76 77 79 76 72 74 76 72 69 67 65 69 74 76 77 79 81 83 84
    81 77 76 77 74 71 69 71 67 65 64 65 62 64 72 79 79 64 72 79 72 81 72 82 72 65
    72 81 77 76 74 72 70 69 67 65 64 66 74 81 81 66 74 81 74 83 74 84 74 67 74 83
    79 77 76 74 72 71 69 67 65 64 65 67 72 76 72 71 72 67 71 72 76 65 67 69 72 76
    72 71 72 69 71 72 76 67 69 71 72 76 72 71 72 71 72 74 76 69 71 72 76 77 81 77
    76 74 77 74 72 71 72 74 77 79 86 83 81 79 83 79 77 76 79 76 74 72 76 72 71 69
    72 69 67 65 76 81 74 76 71 72 66 67 72 67 71 63 72 81 84 83 81 79 78 76 75 83
    81 84 83 81 79 78 76 71 75 76 78 79 81 82 81 82 79 73 74 76 77 79 77 79 76 69
    73 76 79 77 62 64 65 69 74 76 77 76 77 74 68 69 71 72 74 72 74 71 64 68 71 74
    72 71 69 71 72 76 81 83 84 83 84 81 75 76 78 79 81 79 81 78 71 75 78 81 80 81
    83 80 76 80 74 80 72 80 71 80 72 76 81 76 72 76 71 76 72 76 69 76 68 76 83 76
    68 76 66 76 68 76 64 76 69 76 84 76 77 74 81 74 84 74 81 74 83 74 67 74 76 72
    79 72 82 72 79 72 81 72 65 69 74 76 77 74 71 72 74 71 80 81 83 80 76 78 80 83
    86 84 86 83 84 81 77 76 74 84 83 81 76 83 81 80 81 77 74 72 71 81 79 77 73 79
    77 76 77 74 70 69 68 77 76 74 69 76 74 72 74 71 68 66 64 66 68 69 71 72 74 71
    72 69 72 76 81 83 84 81 76 81 83 80 81 76 77 74 72 81 71 80 69))

(5am:test partita2-ppmc*
  (5am:is (equal (test-ppm (list *partita-2*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil :detail 1)
                 3.7355547)))

(5am:test partita2-ppmc*i
  (5am:is (equal (test-ppm (list *partita-2*) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 1)
                 3.5950103)))

(defvar *partita-3*
  ;; J. S. Bach: Solo Partitas for Flute, A-minor: 3rd Movement “Sarabande”
  '(69 71 72 76 68 69 65 64 66 68 69 71 74 77 76 74 71 72 69 71 69 71 72 76 68 69
    77 76 74 67 69 71 74 66 67 76 74 72 76 79 76 74 72 71 72 67 69 71 72 74 76 77
    79 77 76 79 77 76 74 77 76 74 72 76 69 71 72 74 76 77 79 81 79 77 81 79 77 76
    79 77 76 74 77 83 84 86 84 83 81 79 77 76 77 74 76 74 72 79 81 77 76 74 72 72
    76 72 71 72 81 79 76 74 76 77 74 68 76 83 74 72 71 72 69 81 79 77 76 74 73 74
    82 81 79 77 76 81 69 65 81 79 77 76 74 73 74 67 82 81 79 77 76 85 83 85 86 74
    76 77 81 79 77 76 77 74 69 65 62 65 69 71 72 74 77 81 79 77 76 74 72 80 81 68
    69 71 74 77 76 74 72 71 69 81 84 74 84 83 86 80 81 72 84 83 86 80 81 71 77 76
    74 72 71 72 74 69 68 66 64 69 71 72 76 68 69 77 76 74 71 72 74 77 76 74 83 80
    81 78 80 83 76 72 71 69 68 69 64 66 68 69 71 72 74 76 74 72 76 74 72 71 74 72
    71 69 72 66 68 69 71 72 74 76 77 76 74 77 76 74 72 76 74 72 71 74 80 81 83 81
    80 78 76 86 84 86 83 84 83 81 80 81 76 74 72 71 69 69))

(5am:test partita3-ppmc*
  (5am:is (equal (test-ppm (list *partita-3*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil :detail 1)
                 3.340012)))

(5am:test partita3-ppmc*i
  (5am:is (equal (test-ppm (list *partita-3*) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 1)
                 3.214093)))

(defvar *tristan*
  ;; Wagner: Cor Anglais solo from Tristan Act 3
  '(65 72 75 73 68 73 67 72 65 70 72 70 68 67 65 65 70 67 63 62 61 68 65 61 60 59
    67 68 67 66 65 72 75 73 68 73 67 72 66 72 65 70 64 70 63 68 61 58 60 65 60 66
    60 67 61 68 67 61 66 60 68 67 61 66 60 68 67 61 66 60 68 67 61 66 60 68 67 72
    70 68 75 72 68 67 66 74 71 67 66 65 73 70 66 65 64 72 68 65 64 63 70 67 63 62
    61 68 65 61 60 59 67 60 72 67 60 72 67 60 72 67 60 72 67 60 72 67 60 72 67 60
    72 66 73 65 64 60 72 66 73 65 64 60 72 66 73 65 64 60 72 66 73 65 64 60 72 66
    73 65 64 60 72 64 60 72 67 60 72 67 60 72 66 65 64 72 68 65 58 61 60 65 60 61
    56 58 60 56 55 53 53))

(5am:test tristan-ppmc*
  (5am:is (equal (test-ppm (list *tristan*) :escape :c :mixtures nil :update-exclusion nil :order-bound nil :detail 1)
                 2.9937272)))

(5am:test tristan-ppmc*i
  (5am:is (equal (test-ppm (list *tristan*) :escape :c :mixtures t :update-exclusion nil :order-bound nil :detail 1)
                 2.9435916)))
  
